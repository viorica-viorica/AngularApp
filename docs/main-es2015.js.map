{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/Components/admin-page/admin-hotels/add-hotel/add-hotel.component.ts","./src/app/Components/admin-page/admin-hotels/add-hotel/add-hotel.component.html","./src/app/Components/admin-page/admin-hotels/edit-hotel/edit-hotel.component.ts","./src/app/Components/admin-page/admin-hotels/edit-hotel/edit-hotel.component.html","./src/app/Components/admin-page/admin-hotels/view-hotels/view-hotels.component.html","./src/app/Components/admin-page/admin-hotels/view-hotels/view-hotels.component.ts","./src/app/Components/admin-page/admin-page.component.ts","./src/app/Components/admin-page/admin-page.component.html","./src/app/Components/admin-page/admin-reservations/admin-reservations.component.html","./src/app/Components/admin-page/admin-reservations/admin-reservations.component.ts","./src/app/Components/admin-page/admin-restaurants/add-restaurant/add-restaurant.component.ts","./src/app/Components/admin-page/admin-restaurants/add-restaurant/add-restaurant.component.html","./src/app/Components/admin-page/admin-restaurants/edit-restaurant/edit-restaurant.component.ts","./src/app/Components/admin-page/admin-restaurants/edit-restaurant/edit-restaurant.component.html","./src/app/Components/admin-page/admin-restaurants/view-restaurants/view-restaurants.component.html","./src/app/Components/admin-page/admin-restaurants/view-restaurants/view-restaurants.component.ts","./src/app/Components/admin-page/admin-touristic-objective/add-objective/add-objective.component.ts","./src/app/Components/admin-page/admin-touristic-objective/add-objective/add-objective.component.html","./src/app/Components/admin-page/admin-touristic-objective/edit-objective/edit-objective.component.ts","./src/app/Components/admin-page/admin-touristic-objective/edit-objective/edit-objective.component.html","./src/app/Components/admin-page/admin-touristic-objective/view-objectives/view-objectives.component.html","./src/app/Components/admin-page/admin-touristic-objective/view-objectives/view-objectives.component.ts","./src/app/Components/home/eat/eat.component.ts","./src/app/Components/home/eat/eat.component.html","./src/app/Components/home/gallery/gallery.component.html","./src/app/Components/home/gallery/gallery.component.ts","./src/app/Components/home/home.component.ts","./src/app/Components/home/home.component.html","./src/app/Components/home/items-carousel/items-carousel.component.html","./src/app/Components/home/items-carousel/items-carousel.component.ts","./src/app/Components/home/map/map.component.ts","./src/app/Components/home/map/map.component.html","./src/app/Components/home/stay/stay.component.ts","./src/app/Components/home/stay/stay.component.html","./src/app/Components/home/to-do/to-do.component.ts","./src/app/Components/home/to-do/to-do.component.html","./src/app/Components/hotels/carousel/carousel.component.html","./src/app/Components/hotels/carousel/carousel.component.ts","./src/app/Components/hotels/hotels.component.ts","./src/app/Components/hotels/hotels.component.html","./src/app/Components/login-register/forgotten-password/forgotten-password.component.ts","./src/app/Components/login-register/forgotten-password/forgotten-password.component.html","./src/app/Components/login-register/login-register.component.ts","./src/app/Components/login-register/login-register.component.html","./src/app/Components/login-register/login/login.component.ts","./src/app/Components/login-register/login/login.component.html","./src/app/Components/login-register/register/register.component.ts","./src/app/Components/login-register/register/register.component.html","./src/app/Components/login-register/reset-password/reset-password.component.ts","./src/app/Components/login-register/reset-password/reset-password.component.html","./src/app/Components/my-hotels/my-hotels.component.ts","./src/app/Components/my-hotels/my-hotels.component.html","./src/app/Components/my-profile/my-profile.component.ts","./src/app/Components/my-profile/my-profile.component.html","./src/app/Components/my-restaurants/my-restaurants.component.ts","./src/app/Components/my-restaurants/my-restaurants.component.html","./src/app/Components/navbar/navbar.component.ts","./src/app/Components/navbar/navbar.component.html","./src/app/Components/restaurants/restaurants.component.ts","./src/app/Components/restaurants/restaurants.component.html","./src/app/Models/hotel-model/hotel-model.model.ts","./src/app/Models/restaurant-model/restaurant-model.model.ts","./src/app/Models/touristic-objective-model/touristic-objective-model.model.ts","./src/app/Models/users-model/user-login.model.ts","./src/app/Models/users-model/users-model.model.ts","./src/app/Services/hotel-service/hotel-service.service.ts","./src/app/Services/reservation-service/reservation-service.service.ts","./src/app/Services/restaurant-service/restaurant-service.service.ts","./src/app/Services/touristic-objective-service/touristic-objective-service.service.ts","./src/app/Services/users-service/users-service.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Router } from '@angular/router';\nimport { HotelModel } from './../../../../Models/hotel-model/hotel-model.model';\nimport { HotelServiceService } from './../../../../Services/hotel-service/hotel-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-hotel',\n  templateUrl: './add-hotel.component.html',\n  styleUrls: ['./add-hotel.component.css']\n})\nexport class AddHotelComponent implements OnInit {\n\n  constructor(private hotelService: HotelServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  hotel: HotelModel | undefined;\n  hotelId!: number;\n  name!: string;\n  address!: string;\n  price!: number;\n  rooms!: number;\n  adults!: number;\n  children!: number;\n  latitude!: number;\n  longitude!: number;\n  photo!: File;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  HotelsList: HotelModel[] = [];\n\n  hotelSaveForm = new FormGroup({\n    hotelName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    hotelAddress: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    hotelPrice: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelRooms: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelAdults: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelChildren: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelLatitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelLongitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelPhoto: new FormControl('')\n  });\n\n  checkHotel() {\n    if (!this.name || !this.address || !this.price || !this.rooms || !this.adults || !this.children || !this.latitude\n      || !this.longitude) {\n      this.emptyData = \"Toate câmpurile sunt obloigatorii!\"\n      setTimeout(() => {\n        this.emptyData = '';\n      },\n        2000)\n    }\n    else {\n      this.createHotel();\n    }\n  }\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n  createHotel() {\n    this.hotel = {\n      hotelId: null!,\n      name: this.name,\n      address: this.address,\n      price: this.price,\n      rooms: this.rooms,\n      adults: this.adults,\n      children: this.children,\n      latitude: this.latitude,\n      longitude: this.longitude,\n      photo: this.photo\n    };\n    if (this.wrongImageFormat === '') {\n      this.hotelService.addHotel(this.hotel)\n        .subscribe(\n          (callback: any) => {\n            if (callback) {\n              this.successMessage = \"Hotel adăugat cu succes!\";\n              console.log(this.successMessage)\n              setTimeout(() => {\n                this.successMessage = '';\n                this.router.navigate(['/admin-page/view-hotels']);\n                console.log(callback)\n              },\n                2000)\n            }\n            else {\n              this.failMessage = \"Ceva nu e bine. Încercă din nou!\";\n              setTimeout(() => {\n                this.failMessage = '';\n              },\n                2000)\n            }\n          },\n\n          (err: any) => {\n            this.failMessage = err.error.message;\n            setTimeout(() => {\n              this.failMessage = \"Ceva nu este în regulă!\";\n            },\n              4000)\n          })\n      this.hotelSaveForm.reset();\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Adaugă un nou hotel</h4>\n    </div>\n    <form novalidate autocomplete=\"off\" [formGroup]=\"hotelSaveForm\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../assets/Hotels/hotel-icon.jpg\" class=\"image\" alt=\"\">        \n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" formControlName=\"hotelPhoto\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>\n                </div>\n            </div>\n            \n            <div class=\"add-hotel col-md-7 m-auto\">\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_name\" [(ngModel)]=\"name\" formControlName=\"hotelName\" \n                    placeholder=\"Nume hotel\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_address\" [(ngModel)]=\"address\" formControlName=\"hotelAddress\" \n                    placeholder=\"Adresa\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_rooms\" [(ngModel)]=\"rooms\" formControlName=\"hotelRooms\" \n                    placeholder=\"Număr camere disponibile\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_adults\" [(ngModel)]=\"adults\" formControlName=\"hotelAdults\" \n                    placeholder=\"Adulți\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_children\" [(ngModel)]=\"children\" formControlName=\"hotelChildren\" \n                    placeholder=\"Copii\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_price\" [(ngModel)]=\"price\" formControlName=\"hotelPrice\" \n                    placeholder=\"Preț\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_latitude\" [(ngModel)]=\"latitude\" formControlName=\"hotelLatitude\" \n                    placeholder=\"Latitudine\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_longitude\" [(ngModel)]=\"longitude\" formControlName=\"hotelLongitude\"\n                    placeholder=\"Longitudine\" class=\"form-control\" required>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" (click)=\"checkHotel()\" class=\"button btn btn-outline-success\">Adaugă hotel</button>\n                </div>\n            </div>\n        </div>    \n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HotelModel } from 'src/app/Models/hotel-model/hotel-model.model';\nimport { HotelServiceService } from 'src/app/Services/hotel-service/hotel-service.service';\n\n@Component({\n  selector: 'app-edit-hotel',\n  templateUrl: './edit-hotel.component.html',\n  styleUrls: ['./edit-hotel.component.css']\n})\nexport class EditHotelComponent implements OnInit {\n\n  hotel = new HotelModel();\n  hotelId!: number;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  constructor(private hotelService: HotelServiceService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => this.hotelId = parseInt(params.get('id')!)\n    );\n    this.loadData();\n  }\n\n  loadData() {\n    this.hotelService.getHotel(this.hotelId)\n      .subscribe(\n        (data: HotelModel) => {\n          this.hotel = data;\n          console.log(\"loadData\", data)\n        }\n      );\n  }\n\n  editHotel(f: NgForm) {\n    this.hotel = f.value;\n    console.log(\"Hotel Form: \", this.hotel);\n    this.hotelService.updateHotel(this.hotelId, f.value)\n      .subscribe(\n        data => {\n          this.successMessage = \"Hotel actualizat cu succes!\";\n          console.log(this.successMessage)\n          setTimeout(() => {\n            this.successMessage = '';\n            this.router.navigate(['/admin-page/view-hotels']);\n            console.log(data)\n          },\n            2000\n          )\n        },\n\n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n            4000)\n        }\n      )\n  }\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.hotel.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.hotel.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n}\n","<div class=\"form-title\">\n    <h4>Actualizează hotel</h4>\n</div>\n<form #f=\"ngForm\" (ngSubmit)=\"editHotel(f)\">\n    <hr>\n    <div class=\"row components\">\n        <div class=\"col-md-5 m-auto\">\n            <div class=\"form-group\">\n                <img src=\"../../../assets/Hotels/hotel-icon.jpg\" class=\"image\" alt=\"\">\n                <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                    (change)=\"uploadImage($event)\" name=\"photo\" [(ngModel)]=\"hotel.photo\" required>\n                <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                <button class=\"button\">Încarcă fotografia</button>\n            </div>\n        </div>\n\n        <div class=\"add-hotel col-md-7 m-auto\">\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"id\">ID: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"hotelId\" [(ngModel)]=\"hotel.hotelId\" placeholder=\"Id hotel\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"name\">Nume hotel: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"name\" [(ngModel)]=\"hotel.name\" placeholder=\"Nume hotel\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"address\">Adresa: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"address\" [(ngModel)]=\"hotel.address\" placeholder=\"Adresa\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"rooms\">Număr camere: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"rooms\" [(ngModel)]=\"hotel.rooms\" placeholder=\"Număr camere disponibile\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"adults\">Adulți: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"adults\" [(ngModel)]=\"hotel.adults\" placeholder=\"Adulți\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"children\">Copii: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"children\" [(ngModel)]=\"hotel.children\" placeholder=\"Copii\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"price\">Preț: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"price\" [(ngModel)]=\"hotel.price\" placeholder=\"Preț\" class=\"form-control\"\n                        required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"latitude\">Latitudine: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"latitude\" [(ngModel)]=\"hotel.latitude\" placeholder=\"Latitudine\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"longitude\">Longitudine: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"longitude\" [(ngModel)]=\"hotel.longitude\" placeholder=\"Longitudine\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"alert-msg\">\n                    <div style=\"color: red; font-size: 16px\">\n                        {{emptyData}}\n                    </div>\n                    <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                        <strong>Minunat!</strong> {{ successMessage }}\n                    </div>\n                    <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                        <strong>Uups!</strong> {{ failMessage }}\n                    </div>\n                </div>\n\n                <button type=\"submit\" class=\"button btn btn-outline-success\">Actualizează hotel</button>\n            </div>\n        </div>\n    </div>\n</form>","<div class=\"table-responsive-md view-hotels\">\n    <div class=\"form-title\">\n        <h4>Hoteluri</h4>\n    </div>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <!-- <th>ID</th> -->\n                <th>Nume Hotel</th>\n                <th>Adresa hotelului</th>\n                <th>Număr camere</th>\n                <th>Adulți</th>\n                <th>Copii</th>\n                <th>Preț</th>\n                <th>Latitudine</th>\n                <th>Longitudine</th>\n                <th>Opțiuni</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor=\"let dataItem of HotelsList\">\n                <!-- <td>{{dataItem.hotelId}}</td> -->\n                <td>{{dataItem.name}}</td>\n                <td>{{dataItem.address}}</td>\n                <td>{{dataItem.rooms}} camere</td>\n                <td>{{dataItem.adults}} adulți</td>\n                <td>{{dataItem.children}} copii</td>\n                <td>{{dataItem.price}} RON</td>\n                <td>{{dataItem.latitude}}</td>\n                <td>{{dataItem.longitude}}</td>\n                <td>\n                    <button type=\"button\" class=\"edit btn btn-light mr-1\" routerLink=\"../edit-hotel/{{dataItem.hotelId}}\">\n                        <i class=\"far fa-edit\"></i>\n                    </button>\n                    <button type=\"button\" class=\"delete btn btn-light mr-1\" (click)=\"deleteItem(dataItem)\">\n                        <i class=\"fas fa-trash-alt\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { HotelModel } from 'src/app/Models/hotel-model/hotel-model.model';\nimport { HotelServiceService } from 'src/app/Services/hotel-service/hotel-service.service';\n\n@Component({\n  selector: 'app-view-hotels',\n  templateUrl: './view-hotels.component.html',\n  styleUrls: ['./view-hotels.component.css']\n})\nexport class ViewHotelsComponent implements OnInit, OnDestroy {\n\n  constructor(private HotelService: HotelServiceService) { }\n\n  private subcription!: Subscription;\n  HotelsList: HotelModel[] = [];\n  \n  ngOnInit(): void {\n    this.refreshHotelsList();\n  }\n\n  ngOnDestroy(){\n    if (this.subcription){\n      this.subcription.unsubscribe;\n    }\n  }\n\n  deleteItem(hotel: HotelModel) {\n    if (confirm('Ești sigur că vrei să ștergi acest hotel?')) {\n      this.HotelService.deleteHotel(hotel.hotelId)\n        .subscribe(\n          res => {\n            // this.toastr.error(\"Deleted successfully\");\n            this.refreshHotelsList();\n          },\n          err => { console.log(err) }\n        )\n    }\n  }\n\nrefreshHotelsList(){\n  this.HotelService.getHotelsList().subscribe(data=>{\n    this.HotelsList=data;\n  });\n}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"formular\">\n        <div class=\"title\">\n            <h4>Administrator</h4>\n        </div>\n        <hr>\n\n        <div class=\"forms\">\n            <div class=\"button-forms m-auto\">\n                <div class=\"btn-group mr-5\">\n                    <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\n                        <button class=\"btn\" routerLink=\"admin-reservation\" type=\"button\">Rezervări</button>\n                    </div>\n    \n                    <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\n                        <button class=\"btn\" ngbDropdownToggle>Restaurante</button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button class=\"button\" routerLink=\"view-restaurants\" ngbDropdownItem>Lista restaurante</button>\n                            <button class=\"button\" routerLink=\"add-restaurant\" ngbDropdownItem>Adaugă restaurant</button>\n                        </div>\n                    </div>\n    \n                    <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\n                        <button class=\"btn\" ngbDropdownToggle>Hoteluri</button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button class=\"button\" routerLink=\"view-hotels\" ngbDropdownItem>Lista\n                                hoteluri</button>\n                            <button class=\"button\" routerLink=\"add-hotel\" ngbDropdownItem>Adaugă hotel</button>\n                        </div>\n                    </div>\n    \n                    <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\n                        <button class=\"btn\" ngbDropdownToggle>Obiective turistice</button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button class=\"button\" routerLink=\"view-objectives\" ngbDropdownItem>Lista\n                                obiective turistice</button>\n                            <button class=\"button\" routerLink=\"add-objective\" ngbDropdownItem>Adaugă obiectiv</button>\n                        </div>\n                    </div>\n                </div>\n            </div>            \n\n            <div class=\"form-card\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>","<form id=\"reservation\" class=\"reservation\" action=\"#\" method=\"post\">\n    <div class=\"form-title\">\n        <h5>Rezervări</h5>\n    </div>\n    \n    <table class=\"table\">\n        <thead>\n            <tr>\n                <!-- <th>ID</th> -->\n                <th>Numele utilizatorului</th>\n                <th>Numele rezervării</th>\n                <th>Data de început</th>\n                <th>Data de final</th>\n                <th>Intervalul orar</th>\n                <th>Preț</th>\n                <th>Opțiuni</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor=\"let dataItem of ReservationsList\">\n                <!-- <td>{{dataItem.objectiveId}}</td> -->\n                <td>{{dataItem.username}}</td>\n                <td>{{dataItem.reservationName}}</td>\n                <td>{{dataItem.startDate}}</td>\n                <td>{{dataItem.endDate}}</td>\n                <td>{{dataItem.time}}</td>\n                <td>{{dataItem.price}}</td>\n                <td>\n                    <button type=\"button\" class=\"edit btn btn-light mr-1\">\n                        <i class=\"far fa-edit\"></i>\n                    </button>\n                    <button type=\"button\" class=\"delete btn btn-light mr-1\">\n                        <i class=\"fas fa-trash-alt\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ReservationModel } from 'src/app/Models/reservation-model/reservation-model.model';\nimport { ReservationServiceService } from 'src/app/Services/reservation-service/reservation-service.service';\n\n@Component({\n  selector: 'app-admin-reservations',\n  templateUrl: './admin-reservations.component.html',\n  styleUrls: ['./admin-reservations.component.css']\n})\nexport class AdminReservationsComponent implements OnInit {\n\n  constructor(private reservationService: ReservationServiceService) { }\n\n  private subcription!: Subscription;\n  ReservationsList: ReservationModel[] = [];\n  \n  ngOnInit(): void {\n    this.refreshReservationsList();\n  }\n\n  ngOnDestroy(){\n    if (this.subcription){\n      this.subcription.unsubscribe;\n    }\n  }\n\n  refreshReservationsList(){\n    this.reservationService.getReservationsList().subscribe(data=>{\n      this.ReservationsList=data;\n    });\n  }\n}\n","import { Router } from '@angular/router';\nimport { RestaurantServiceService } from './../../../../Services/restaurant-service/restaurant-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { RestaurantModel } from 'src/app/Models/restaurant-model/restaurant-model.model';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-restaurant',\n  templateUrl: './add-restaurant.component.html',\n  styleUrls: ['./add-restaurant.component.css']\n})\nexport class AddRestaurantComponent implements OnInit {\n\n  constructor(private restaurantService: RestaurantServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  restaurant: RestaurantModel | undefined;\n  restaurantId!: number;\n  name!: string;\n  address!: string;\n  schedule!: string;\n  latitude!: number;\n  longitude!: number;\n  photo!: File;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  restaurantSaveForm = new FormGroup({\n    restaurantName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    restaurantAddress: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    restaurantSchedule: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    restaurantLatitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    restaurantLongitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    restaurantPhoto: new FormControl('')\n  });\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n  checkRestaurant() {\n    if (!this.name || !this.address || !this.schedule || !this.latitude || !this.longitude) {\n      this.emptyData = \"Toate câmpurile sunt obloigatorii!\"\n      setTimeout(() => {\n        this.emptyData = '';\n      },\n        2000)\n    }\n    else {\n      this.createRestaurant();\n    }\n  }\n\n  createRestaurant(){\n    this.restaurant = {\n      restaurantId: null!,\n      name: this.name,\n      address: this.address,\n      schedule: this.schedule,\n      latitude: this.latitude,\n      longitude: this.longitude,\n      photo: this.photo\n    };\n      if (this.wrongImageFormat === '') {\n        this.restaurantService.addRestaurant(this.restaurant)\n          .subscribe(\n            (callback: any) => {\n            if (callback) {\n              this.successMessage = \"Restaurant adăugat cu succes!\";\n                console.log(this.successMessage)\n                  setTimeout(() => {\n                    this.successMessage = '';\n                    this.router.navigate(['/admin-page/view-restaurants']);\n                    console.log(callback)\n                  },\n                  2000)\n                }\n                else {\n                  this.failMessage = \"Ceva nu e bine. Încercă din nou!\";\n                    setTimeout(() => {\n                      this.failMessage = '';\n                    },\n                  2000)\n                }\n              },\n            \n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n          4000)\n        })\n        this.restaurantSaveForm.reset();\n      }\n  }\n}\n","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Adaugă un nou restaurant</h4>\n    </div>\n    <form novalidate autocomplete=\"off\" [formGroup]=\"restaurantSaveForm\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../../../assets/Restaurante/restaurant_icon1.jpg\" class=\"image\" alt=\"\">        \n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" formControlName=\"restaurantPhoto\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>\n                </div>\n            </div>\n            \n            <div class=\"add-hotel col-md-7 m-auto\">\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_name\" [(ngModel)]=\"name\" formControlName=\"restaurantName\" \n                    placeholder=\"Nume restaurant\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_address\" [(ngModel)]=\"address\" formControlName=\"restaurantAddress\" \n                    placeholder=\"Adresa\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_schedule\" [(ngModel)]=\"schedule\" formControlName=\"restaurantSchedule\" \n                    placeholder=\"Program\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_latitude\" [(ngModel)]=\"latitude\" formControlName=\"restaurantLatitude\" \n                    placeholder=\"Latitudine\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_longitude\" [(ngModel)]=\"longitude\" formControlName=\"restaurantLongitude\"\n                    placeholder=\"Longitudine\" class=\"form-control\" required>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" (click)=\"checkRestaurant()\" class=\"button btn btn-outline-success\">Adaugă restaurant</button>\n                </div>\n            </div>\n        </div>    \n    </form>    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestaurantModel } from 'src/app/Models/restaurant-model/restaurant-model.model';\nimport { RestaurantServiceService } from 'src/app/Services/restaurant-service/restaurant-service.service';\n\n@Component({\n  selector: 'app-edit-restaurant',\n  templateUrl: './edit-restaurant.component.html',\n  styleUrls: ['./edit-restaurant.component.css']\n})\nexport class EditRestaurantComponent implements OnInit {\n\n  restaurant = new RestaurantModel();\n  restaurantId!: number;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  constructor(private restaurantService: RestaurantServiceService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => this.restaurantId = parseInt(params.get('id')!)\n    );\n    this.loadData();\n  }\n\n  loadData() {\n    this.restaurantService.getRestaurant(this.restaurantId)\n      .subscribe(\n        (data: RestaurantModel) => {\n          this.restaurant = data;\n          console.log(\"loadData\", data)\n        }\n      );\n  }\n\n  editRestaurant(f: NgForm) {\n    this.restaurant = f.value;\n    console.log(\"Restaurant Form: \", this.restaurant);\n    this.restaurantService.updateRestaurant(this.restaurantId, f.value)\n      .subscribe(\n        data => {\n          this.successMessage = \"Actualizare cu succes!\";\n          console.log(this.successMessage)\n          setTimeout(() => {\n            this.successMessage = '';\n            this.router.navigate(['/admin-page/view-restaurants']);\n            console.log(data)\n          },\n            2000\n          )\n        },\n\n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n            4000)\n        }\n      )\n  }\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.restaurant.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.restaurant.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Actualizează restaurant</h4>\n    </div>\n    <form #f=\"ngForm\" (ngSubmit)=\"editRestaurant(f)\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../../../assets/Restaurante/restaurant_icon1.jpg\" class=\"image\" alt=\"\">        \n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" name=\"photo\" [(ngModel)]=\"restaurant.photo\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>\n                </div>\n            </div>\n            \n            <div class=\"add-hotel col-md-7 m-auto\">\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"id\">ID: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"restaurantId\" [(ngModel)]=\"restaurant.restaurantId\" \n                        placeholder=\"Nume restaurant\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"name\">Nume restaurant: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"name\" [(ngModel)]=\"restaurant.name\" \n                        placeholder=\"Nume restaurant\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"address\">Adresa: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"address\" [(ngModel)]=\"restaurant.address\" \n                        placeholder=\"Adresa\" class=\"form-control\" required>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"schedule\">Program: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"schedule\" [(ngModel)]=\"restaurant.schedule\"\n                        placeholder=\"Program\" class=\"form-control\" required>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"latitude\">Latitudine: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"latitude\" [(ngModel)]=\"restaurant.latitude\"\n                        placeholder=\"Latitudine\" class=\"form-control\" required>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"longitude\">Longitudine: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"longitude\" [(ngModel)]=\"restaurant.longitude\"\n                        placeholder=\"Longitudine\" class=\"form-control\" required>\n                    </div>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" class=\"button btn btn-outline-success\">Actualizează restaurant</button>\n                </div>\n            </div>\n        </div>    \n    </form>    \n</div>","<div class=\"table-responsive-md view-restaurants\">\n    <div class=\"form-title\">\n        <h4>Restaurante</h4>\n    </div>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <!-- <th>ID</th> -->\n                <th>Nume Restaurant</th>\n                <th>Adresa restaurantului</th>\n                <th>Program</th>\n                <th>Latitudine</th>\n                <th>Longitudine</th>\n                <th>Opțiuni</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor=\"let dataItem of RestaurantsList\">\n                <!-- <td>{{dataItem.restaurantId}}</td> -->\n                <td>{{dataItem.name}}</td>\n                <td>{{dataItem.address}}</td>\n                <td>{{dataItem.schedule}}</td>\n                <td>{{dataItem.latitude}}</td>\n                <td>{{dataItem.longitude}}</td>\n                <td>\n                    <button type=\"button\" class=\"edit btn btn-light mr-1\" routerLink=\"../edit-restaurant/{{dataItem.restaurantId}}\">\n                        <i class=\"far fa-edit\"></i>\n                    </button>\n                    <button type=\"button\" class=\"delete btn btn-light mr-1\" (click)=\"deleteItem(dataItem)\">\n                        <i class=\"fas fa-trash-alt\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { RestaurantServiceService } from './../../../../Services/restaurant-service/restaurant-service.service';\nimport { RestaurantModel } from './../../../../Models/restaurant-model/restaurant-model.model';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-view-restaurants',\n  templateUrl: './view-restaurants.component.html',\n  styleUrls: ['./view-restaurants.component.css']\n})\nexport class ViewRestaurantsComponent implements OnInit, OnDestroy {\n\n  constructor(private restaurantService: RestaurantServiceService) { }\n\n  private subcription!: Subscription;\n  RestaurantsList: RestaurantModel[] = [];\n\n  ngOnInit(): void {\n    this.refreshRestaurantsList();\n  }\n\n  ngOnDestroy(){\n    if (this.subcription){\n      this.subcription.unsubscribe;\n    }\n  }\n\n  deleteItem(restaurant: RestaurantModel) {\n    if (confirm('Ești sigur că vrei să ștergi acest hotel?')) {\n      this.restaurantService.deleteRestaurant(restaurant.restaurantId)\n        .subscribe(\n          res => {\n            // this.toastr.error(\"Deleted successfully\");\n            this.refreshRestaurantsList();\n          },\n          err => { console.log(err) }\n        )\n    }\n  }\n\n  refreshRestaurantsList(){\n    this.restaurantService.getRestaurantsList().subscribe(data=>{\n      this.RestaurantsList=data;\n    });\n  }\n}\n","import { Router } from '@angular/router';\nimport { TouristicObjectiveModel } from './../../../../Models/touristic-objective-model/touristic-objective-model.model';\nimport { TouristicObjectiveServiceService } from './../../../../Services/touristic-objective-service/touristic-objective-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-objective',\n  templateUrl: './add-objective.component.html',\n  styleUrls: ['./add-objective.component.css']\n})\nexport class AddObjectiveComponent implements OnInit {\n\n  constructor(private objectiveService: TouristicObjectiveServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  objective: TouristicObjectiveModel | undefined;\n  objectiveId!: number;\n  name!: string;\n  address!: string;\n  description!: string;\n  schedule!: string;\n  latitude!: number;\n  longitude!: number;\n  photo!: File;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  objectiveSaveForm = new FormGroup({\n    objectiveName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    objectiveAddress: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    objectiveDescription: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    objectiveSchedule: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    objectiveLatitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    objectiveLongitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    objectivePhoto: new FormControl('')\n  });\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n  checkObjective() {\n    if (!this.name || !this.address || !this.description || !this.schedule || !this.latitude || !this.longitude) {\n      this.emptyData = \"Toate câmpurile sunt obloigatorii!\"\n      setTimeout(() => {\n        this.emptyData = '';\n      },\n        2000)\n    }\n    else {\n      this.createObjective();\n    }\n  }\n\n  createObjective(){\n    this.objective = {\n      objectiveId: null!,\n      name: this.name,\n      address: this.address,\n      description: this.description,\n      schedule: this.schedule,\n      latitude: this.latitude,\n      longitude: this.longitude,\n      photo: this.photo\n    };\n      if (this.wrongImageFormat === '') {\n        this.objectiveService.addTouristicObjective(this.objective)\n          .subscribe(\n            (callback: any) => {\n            if (callback) {\n              this.successMessage = \"Obiectiv turistic adăugat cu succes!\";\n                console.log(this.successMessage)\n                  setTimeout(() => {\n                    this.successMessage = '';\n                    this.router.navigate(['/admin-page/view-objectives']);\n                    console.log(callback)\n                  },\n                  2000)\n                }\n                else {\n                  this.failMessage = \"Ceva nu e bine. Încercă din nou!\";\n                    setTimeout(() => {\n                      this.failMessage = '';\n                    },\n                  2000)\n                }\n              },\n            \n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n          4000)\n        })\n        this.objectiveSaveForm.reset();\n      }\n  }\n}\n","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Adaugă un nou obiectiv turistic</h4>\n    </div>\n    <form novalidate autocomplete=\"off\" [formGroup]=\"objectiveSaveForm\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../../../assets/Objectives/objective-icon.jpg\" class=\"image\" alt=\"\">        \n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" formControlName=\"objectivePhoto\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>\n                </div>\n            </div>\n            \n            <div class=\"add-hotel col-md-7 m-auto\">\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_name\" [(ngModel)]=\"name\" formControlName=\"objectiveName\" \n                    placeholder=\"Denumire\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_address\" [(ngModel)]=\"address\" formControlName=\"objectiveAddress\" \n                    placeholder=\"Adresa\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_description\" [(ngModel)]=\"description\" formControlName=\"objectiveDescription\" \n                    placeholder=\"Descriere\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_schedule\" [(ngModel)]=\"schedule\" formControlName=\"objectiveSchedule\" \n                    placeholder=\"Program\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_latitude\" [(ngModel)]=\"latitude\" formControlName=\"objectiveLatitude\" \n                    placeholder=\"Latitudine\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_longitude\" [(ngModel)]=\"longitude\" formControlName=\"objectiveLongitude\"\n                    placeholder=\"Longitudine\" class=\"form-control\" required>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" (click)=\"checkObjective()\" class=\"button btn btn-outline-success\">Adaugă obiectiv</button>\n                </div>\n            </div>\n        </div>    \n    </form>    \n</div>","import { TouristicObjectiveServiceService } from './../../../../Services/touristic-objective-service/touristic-objective-service.service';\nimport { TouristicObjectiveModel } from './../../../../Models/touristic-objective-model/touristic-objective-model.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-objective',\n  templateUrl: './edit-objective.component.html',\n  styleUrls: ['./edit-objective.component.css']\n})\nexport class EditObjectiveComponent implements OnInit {\n\n  objective = new TouristicObjectiveModel();\n  objectiveId!: number;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  constructor(private objectiveService: TouristicObjectiveServiceService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => this.objectiveId = parseInt(params.get('id')!)\n    );\n    this.loadData();\n  }\n\n  loadData() {\n    this.objectiveService.getTouristicObjective(this.objectiveId)\n      .subscribe(\n        (data: TouristicObjectiveModel) => {\n          this.objective = data;\n          console.log(\"loadData\", data)\n        }\n      );\n  }\n\n  editObjective(f: NgForm) {\n    this.objective = f.value;\n    console.log(\"Objective Form: \", this.objective);\n    this.objectiveService.updateTouristicObjective(this.objectiveId, f.value)\n      .subscribe(\n        data => {\n          this.successMessage = \"Actualizare cu succes!\";\n          console.log(this.successMessage)\n          setTimeout(() => {\n            this.successMessage = '';\n            this.router.navigate(['/admin-page/view-objectives']);\n            console.log(data)\n          },\n            2000\n          )\n        },\n\n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n            4000)\n        }\n      )\n  }\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.objective.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.objective.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Actualizează un obiectiv turistic</h4>\n    </div>\n    <form #f=\"ngForm\" (ngSubmit)=\"editObjective(f)\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../../../assets/Objectives/objective-icon.jpg\" class=\"image\" alt=\"\">\n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" name=\"photo\" [(ngModel)]=\"objective.photo\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>       \n                </div>\n            </div>\n            \n            <div class=\"edit-objective col-md-7 m-auto container-fluid\">\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"id\">ID: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"objectiveId\" [(ngModel)]=\"objective.objectiveId\"\n                        placeholder=\"Id\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"name\">Denumire: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"name\" [(ngModel)]=\"objective.name\"\n                        placeholder=\"Denumire\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"address\">Adresa: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"address\" [(ngModel)]=\"objective.address\" \n                        placeholder=\"Adresa\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"description\">Descriere: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"description\" [(ngModel)]=\"objective.description\"\n                        placeholder=\"Descriere\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"schedule\">Program: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"schedule\" [(ngModel)]=\"objective.schedule\"\n                        placeholder=\"Program\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"latitude\">Latitudine: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"latitude\" [(ngModel)]=\"objective.latitude\"\n                        placeholder=\"Latitudine\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"longitude\">Longitudine: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"longitude\" [(ngModel)]=\"objective.longitude\"\n                        placeholder=\"Longitudine\" class=\"form-control\" required>\n                    </div>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" class=\"button btn btn-outline-success\">Actualizează obiectiv</button>\n                </div>\n            </div>\n        </div>    \n    </form>\n</div>","<div class=\"table-responsive-md view-objectives\">\n    <div class=\"form-title\">\n        <h4>Obiective turistice</h4>\n    </div>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <!-- <th>ID</th> -->\n                <th>Denumire</th>\n                <th>Adresa</th>\n                <th>Descriere</th>\n                <th>Program</th>\n                <th>Latitudine</th>\n                <th>Longitudine</th>\n                <th>Opțiuni</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor=\"let dataItem of ObjectivesList\">\n                <!-- <td>{{dataItem.objectiveId}}</td> -->\n                <td>{{dataItem.name}}</td>\n                <td>{{dataItem.address}}</td>\n                <td>{{dataItem.description}}</td>\n                <td>{{dataItem.schedule}}</td>\n                <td>{{dataItem.latitude}}</td>\n                <td>{{dataItem.longitude}}</td>\n                <td>\n                    <button type=\"button\" class=\"edit btn btn-light mr-1\" routerLink=\"../edit-objective/{{dataItem.objectiveId}}\">\n                        <i class=\"far fa-edit\"></i>\n                    </button>\n                    <button type=\"button\" class=\"delete btn btn-light mr-1\" (click)=\"deleteItem(dataItem)\">\n                        <i class=\"fas fa-trash-alt\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { TouristicObjectiveModel } from './../../../../Models/touristic-objective-model/touristic-objective-model.model';\nimport { TouristicObjectiveServiceService } from './../../../../Services/touristic-objective-service/touristic-objective-service.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-view-objectives',\n  templateUrl: './view-objectives.component.html',\n  styleUrls: ['./view-objectives.component.css']\n})\nexport class ViewObjectivesComponent implements OnInit, OnDestroy {\n\n  constructor(private objectiveService: TouristicObjectiveServiceService) { }\n\n  private subcription!: Subscription;\n  ObjectivesList: TouristicObjectiveModel[] = [];\n\n  ngOnInit(): void {\n    this.refreshObjectivesList();\n  }\n\n  ngOnDestroy(){\n    if (this.subcription){\n      this.subcription.unsubscribe;\n    }\n  }\n\n  deleteItem(objective: TouristicObjectiveModel) {\n    if (confirm('Ești sigur că vrei să ștergi acest hotel?')) {\n      this.objectiveService.deleteTouristicObjective(objective.objectiveId)\n        .subscribe(\n          res => {\n            // this.toastr.error(\"Deleted successfully\");\n            this.refreshObjectivesList();\n          },\n          err => { console.log(err) }\n        )\n    }\n  }\n\n  refreshObjectivesList(){\n    this.objectiveService.getTouristicObjectivesList().subscribe(data=>{\n      this.ObjectivesList=data;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eat',\n  templateUrl: './eat.component.html',\n  styleUrls: ['./eat.component.css']\n})\nexport class EatComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n    <h5>Restaurante</h5>\n    <div class=\"row to-do\">\n        <div class=\"col-md-2\">\n            <p>\n                Nu rata locuri unde să iei masa, să bei și să sărbătorești.\n            </p>\n        </div>\n        <div class=\"col-md-10 m-auto\">\n            <app-items-carousel></app-items-carousel>\n        </div>\n    </div>\n</div>\n","<mdb-carousel class=\"carousel slide carousel-fade\" [animation]=\"'fade'\">\r\n    <mdb-carousel-item *ngFor=\"let item of items\">\r\n      <div class=\"view w-100\">\r\n        <img class=\"d-block w-100\" [src]=\"item.img\" alt=\"{{item.alt}}\">\r\n        <!-- <div class=\"mask rgba-black-light waves-light\" mdbWavesEffect></div> -->\r\n      </div>\r\n      <div class=\"carousel-caption\">\r\n        <h3 class=\"h3-responsive\">{{item.description}}</h3>\r\n        <!-- <p>First text</p> -->\r\n      </div>\r\n    </mdb-carousel-item>\r\n  </mdb-carousel>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.css']\n})\nexport class GalleryComponent implements OnInit {\n\n  items=[\n    {\n      img: '../../../../assets/Objectives/9e2f6de991858d3851013b472ce0ddbb.jpg',\n      alt: 'Cetatea Rupea',\n      description: 'Cetatea Rupea'\n    },\n    {\n      img: '../../../../assets/Objectives/castelul-bran.jpg',\n      alt: 'Castelul Bran',\n      description: 'Castelul Bran'\n    },\n    {\n      img: '../../../../assets/Objectives/3757065.jpg',\n      alt: 'Castelul Bran',\n      description: 'Castelul Bran'\n    },\n    {\n      img: '../../../../assets/Objectives/bran-castle-5.jpg',\n      alt: 'Castelul Bran',\n      description: 'Castelul Bran'\n    },\n    {\n      img: '../../../../assets/Objectives/4716740.jpg',\n      alt: 'Piața Sfatului',\n      description: 'Piața Sfatului'\n    },\n    {\n      img: '../../../../assets/Objectives/piata-sfatului.jpg',\n      alt: 'Piața Sfatului',\n      description: 'Piața Sfatului'\n    },\n    {\n      img: '../../../../assets/Objectives/brasov-piata-sfatului-HD-upperhouse.ro_.jpg',\n      alt: 'Piața Sfatului',\n      description: 'Piața Sfatului'\n    },\n    {\n      img: '../../../../assets/Objectives/poiana-brasov-1.jpg',\n      alt: 'Poiana Brașov',\n      description: 'Poiana Brașov'\n    },\n    {\n      img: '../../../../assets/Objectives/poiana-brasov.jpg',\n      alt: 'Poiana Brașov',\n      description: 'Poiana Brașov'\n    },\n    {\n      img: '../../../../assets/Objectives/Cetatea-Rasnov.jpg',\n      alt: 'Cetatea Râșnov',\n      description: 'Cetatea Râșnov'\n    },\n    {\n      img: '../../../../assets/Objectives/Lacul-Noua.jpg',\n      alt: 'Lacul Noua',\n      description: 'Lacul Noua'\n    },\n    {\n      img: '../../../../assets/Objectives/11458702Master.jpg',\n      alt: 'Lacul Noua',\n      description: 'Lacul Noua'\n    } \n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"container\">\n    <div class=\"title\">\n        <h4>Explorăm Brașovul împreună</h4>\n    </div>\n    <hr>\n\n    <div class=\"brasov\">\n        <app-gallery></app-gallery>\n        <app-map></app-map>\n        <hr>\n        <app-to-do></app-to-do>\n        <hr>\n        <app-stay></app-stay>\n        <hr>\n        <app-eat></app-eat>\n    </div>\n</div>","<mdb-carousel [isControls]=\"true\" class=\"carousel-multi-item multi-animation\" [type]=\"'carousel-multi-item'\"\n              [animation]=\"'slide'\">\n  <mdb-carousel-item *ngFor=\"let item of slides; let i = index\">\n    <div class=\"col-md-4 pb-2\" *ngFor=\"let card of item; let cardIndex = index\">\n      <mdb-card class=\"my-1 h-100\">\n        <mdb-card-img [src]=\"card.img\" alt=\"Card image cap\"></mdb-card-img>\n        <mdb-card-body>\n          <mdb-card-title>\n            <h6>{{card.title}}</h6>\n          </mdb-card-title>\n          <p>{{card.description}}</p>\n        </mdb-card-body>\n        <mdb-card-footer>\n          <a href=\"#\" mdbBtn class=\"waves-light button\" mdbWavesEffect>{{card.buttonText}}</a>\n        </mdb-card-footer>\n      </mdb-card>\n    </div>\n  </mdb-carousel-item>\n</mdb-carousel>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-items-carousel',\n  templateUrl: './items-carousel.component.html',\n  styleUrls: ['./items-carousel.component.css']\n})\nexport class ItemsCarouselComponent implements OnInit {\n\n  cards = [\n    {\n      title: 'Card Title 1',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 2',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 3',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 4',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 5',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 6',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 7',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 8',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 9',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n  ];\n  slides: any = [[]];\n  chunk(arr: any, chunkSize: any) {\n    let R = [];\n    for (let i = 0, len = arr.length; i < len; i += chunkSize) {\n      R.push(arr.slice(i, i + chunkSize));\n    }\n    return R;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.slides = this.chunk(this.cards, 3);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  options: google.maps.MapOptions = {\n    center: {lat: 45.64550, lng: 25.58719},\n    zoom: 12\n  };\n\n  apiLoaded: Observable<boolean>;\n\n  constructor(httpClient: HttpClient) {\n    this.apiLoaded = httpClient.jsonp('https://maps.googleapis.com/maps/api/js?key=AIzaSyCO-radFmBvWu8enR_JlVnyx89dMb_LBTA', 'callback')\n    .pipe(\n      map(() => true),\n      catchError(() => of(false)),\n    );\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n    <h5>Despre Brașov</h5>\n        <div class=\"row about-brasov\">\n            <div class=\"col-md-6 description\">\n                <p>Brașov este reședința și cel mai mare oraș al judeșului Brașov, Transilvania, România.\n                    Aflat între marile trecători ale Carpaților (Bran, Predeal, Oituz, Buzău), Brașovul devine înca în urma cu 700 de ani un punct de \n                    legătură între Transilvania, Țara Românească și Moldova, precum și cu centrul Europei și Orient și totodată un puternic centru \n                    meșteșugăresc, comercial și cultural.\n                    În prezent, Brașovul este un oraș privilegiat; între granițele lui puteți să vă bucurați de crestele semețe ale munților Postăvaru, \n                    Bucegi, Piatra Mare, de Muntele Tâmpa și de una din cele mai râvnite stațiuni din România - Poiana Brașov. \n                </p>\n            </div>\n            <div class=\"col-md-6 m-auto maps\" *ngIf=\"apiLoaded | async\">\n                <google-map [options]=\"options\"></google-map>\n                <button type=\"submit\" class=\"button\">Programează o călătorie</button>\n            </div>\n        </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stay',\n  templateUrl: './stay.component.html',\n  styleUrls: ['./stay.component.css']\n})\nexport class StayComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n    <h5>Hoteluri și locuri pentru cazare</h5>\n    <div class=\"row to-do\">\n        <div class=\"col-md-2\">\n            <p>\n                Un mix de locuri pitorești, cu hoteluri și locuri de cazare confortabile și călduroase.\n            </p>\n        </div>\n        <div class=\"col-md-10 m-auto\">\n            <app-items-carousel></app-items-carousel>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-do',\n  templateUrl: './to-do.component.html',\n  styleUrls: ['./to-do.component.css']\n})\nexport class ToDoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n    <h5>Atracții turistice</h5>\n    <div class=\"row to-do\">\n        <div class=\"col-md-2\">\n            <p>\n                Locuri de văzut, modalități de recreere și experiențe de neuitat.\n            </p>\n        </div>\n        <div class=\"col-md-10 m-auto\">\n            <app-items-carousel></app-items-carousel>\n        </div>\n    </div>\n</div>","<ngb-carousel>\n    <ng-template *ngFor=\"let item of items\" ngbSlide>\n        <div class=\"picsum-img-wrapper\">\n            <img [src]=\"item.img\" alt=\"{{item.alt}}\">\n        </div>\n    </ng-template>\n</ngb-carousel>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.css']\n})\nexport class CarouselComponent implements OnInit {\n\n  items = [\n    {\n      img: '../../../../assets/Carousel/pensiunea-luiza.jpg',\n      alt: 'Pensiune Luiza'\n    },\n    {\n      img: '../../../../assets/Carousel/hotel-ambient.jpg',\n      alt: 'Hotel Ambient'\n    },\n    {\n      img: '../../../../assets/Carousel/hotel-drachenhaus.jpg',\n      alt: 'Hotel Drachenaus'\n    },\n    {\n      img: '../../../../assets/Carousel/kronwell.jpg',\n      alt: 'Hotel Kronwell'\n    },\n    {\n      img: '../../../../assets/Carousel/piscina.jpg',\n      alt: 'Hotel cu piscina'\n    },\n    {\n      img: '../../../../assets/Carousel/business-standard-room.jpg',\n      alt: 'Bussines standard room'\n    }\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-hotels',\n  templateUrl: './hotels.component.html',\n  styleUrls: ['./hotels.component.css']\n})\nexport class HotelsComponent implements OnInit {\n  rooms : number = 1;\n  adults : number = 1;\n  children : number = 0;\n\n  increment(value: string){\n    if(value == 'rooms'){\n      if(this.rooms < 3){\n        this.rooms = ++ this.rooms;\n      }\n    }\n    else if(value == 'adults'){\n      if(this.adults < 6){\n        this.adults = ++ this.adults;\n      }\n    }\n    else{\n      if(this.children < 20){\n        this.children = ++this.children;\n      }\n    }\n  }\n\n  decrement(value: string){\n    if(value == 'rooms'){\n      if(this.rooms > 1){\n        this.rooms = -- this.rooms;\n      }\n    }\n    else if(value == 'adults'){\n      if(this.adults > 1){\n        this.adults = -- this.adults;\n      }\n    }\n    else{\n      if(this.children > 0){\n        this.children = -- this.children;\n      }\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"container\">\n    <section class=\"top-side\">\n        <div class=\"title\">\n            <h2>Cazare</h2>\n        </div>\n        <div class=\"row reservation\">\n            <div class=\"col-md-4 m-auto\">\n                <app-carousel></app-carousel>\n            </div>\n\n            <div class=\"col-md-8 m-auto\">\n                <div class=\"row details\">\n                    <div class=\"col-md-6 m-auto\">\n                        <div class=\"input-date\">\n                            <label>Data cazării: </label><br>\n                            <input type=\"date\" class=\"calendar\">\n                        </div>\n                        <div class=\"output-date\">\n                            <label>Data decazării: </label><br>\n                            <input type=\"date\" class=\"calendar\">\n                        </div>\n                    </div>\n                    \n                    <div class=\"guests col-md-6 m-auto\">\n                        <label>Preferințe:</label><br>\n                        <div class=\"row rooms\">\n                            <div class=\"col-6\">\n                                <i class=\"fas fa-bed\"></i>\n                                <label> Camere: </label>\n                            </div>\n                            \n                            <div class=\"col-6 m-auto input-dates\">\n                                <div class=\"input-group input-number-group\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-decrement\" (click)= \"decrement('rooms')\">-</button>\n                                    </div>\n                                    <input class=\"input-number\" type=\"number\" [(ngModel)]=\"rooms\" value=\"{{rooms}}\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-increment\" (click)= \"increment('rooms')\">+</button>\n                                    </div>\n                                </div> \n                            </div>     \n                        </div>\n\n                        <div class=\"row adults\">\n                            <div class=\"col-6 m-auto\">\n                                <i class=\"fas fa-users\"></i>\n                                <label> Adulți: </label>\n                            </div>\n                            \n                            <div class=\"col-6 m-auto input-dates\">\n                                <div class=\"input-group input-number-group\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-decrement\" (click)= \"decrement('adults')\">-</button>\n                                    </div>\n                                    <input class=\"input-number\" type=\"number\" [(ngModel)]=\"adults\" value=\"{{adults}}\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-increment\" (click)= \"increment('adults')\">+</button><br>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row children\">\n                            <div class=\"col-6 m-auto\">\n                                <i class=\"fas fa-baby\"></i>\n                                <label> Copii: </label>\n                            </div>\n                            \n                            <div class=\"col-6 m-auto input-dates\">\n                                <div class=\"input-group input-number-group\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-decrement\" (click)= \"decrement('children')\">-</button>\n                                    </div>\n                                    <input class=\"input-number\" type=\"number\" [(ngModel)]=\"children\" value=\"{{children}}\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-increment\" (click)= \"increment('children')\">+</button>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div> \n\n                <div class=\"row choose-button\">\n                    <button class=\"button\">Caută</button>\n                </div>\n            </div> \n        </div>\n    </section>\n\n    <section class=\"second-side\">\n        <div class=\"row sleep\">\n            <p>„Nimic nu te face să te simți mai bine decât atunci când intri într-un pat de hotel, iar cearșafurile se simt atât de bine.” - Bobby Berk</p>\n        </div>\n        <hr>\n        <div class=\"row hotel\">\n            <div class=\"col-md-4 image-hotel\">\n                <img src=\"../../../assets/Carousel/kronwell.jpg\" alt=\"\">\n            </div>\n            <div class=\"col-md-5 name-hotel\">\n                <h5>Hotel Kronwell</h5>\n                <p>Adresa: </p>\n            </div>\n            <div class=\"col-md-3 price\">\n                <h6>Pret:</h6>\n            </div>\n        </div>\n        <hr>\n\n    </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgotten-password',\n  templateUrl: './forgotten-password.component.html',\n  styleUrls: ['./forgotten-password.component.css']\n})\nexport class ForgottenPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form id=\"forgotten-password\" class=\"input-group\" action=\"#\" method=\"post\">\n    <div class=\"form-title\">\n        <h4>Ați uitat parola?</h4><hr>\n    </div><br>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"adr_email\" placeholder=\"E-mail\" class=\"form-control\" required><br>\n    </div>\n    <div class=\"form-group\">\n        <p>Vă vom trimite un e-mail cu un link de resetare a parolei.</p>\n    </div>\n    <div class=\"button-group\">\n        <button type=\"submit\" class=\"button\">Trimiteți e-mail de resetare</button>\n        <button type=\"button\" routerLink=\"../login\" class=\"button\">Anulare</button>\n    </div>\n</form>","import { Component, ViewChild } from \"@angular/core\";\nimport { IgxToggleDirective } from \"igniteui-angular\";\n\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.css']\n})\nexport class LoginRegisterComponent {\n\n  constructor() { }\n\n}\n","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { UsersModel } from './../../../Models/users-model/users-model.model';\nimport { UserLogin } from './../../../Models/users-model/user-login.model';\nimport { UsersServiceService } from './../../../Services/users-service/users-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: UserLogin = { username: '', password: '' };\n  loginForm!: FormGroup;\n  submitted = false;\n  error: String = null!;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private userService: UsersServiceService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  login() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.user.username = this.loginForm.value.username;\n    this.user.password = this.loginForm.value.password;\n    // this.error = null;\n    this.userService.login(this.user)\n      .subscribe(data => {\n        // if (resp.status === 200) {\n        //   this.userService.getUserByUsername(this.user).subscribe(\n        //     (resp: UsersModel) => {\n        //       this.userService.setLoggedInUser(resp);\n        //     },\n        //     () => { },\n        //     () => {\n        console.log(data);\n        this.router.navigate(['/home']);\n        //     }\n        //   )\n        // }\n      }, error => {\n        this.error = \"Invalid credentials\";\n        console.log(error);\n      }\n      );\n  }\n}\n","<form id=\"login\" class=\"input-group\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n    <div class=\"form-title\">\n        <h4>Autentificare</h4><hr>\n    </div><br>\n\n    <div class=\"form-group\">\n        <br><input type=\"text\" formControlName=\"username\" name=\"nume_utilizator\" placeholder=\"Nume utilizator\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"password\" formControlName=\"password\" name=\"parola\" placeholder=\"Parola\" class=\"form-control\" required><br>\n    </div>\n    <div class=\"form-group\">\n        <button type=\"button\" class=\"forgottenButton mr-3\" routerLink=\"../forgotten-password\">Ați uitat parola?</button>\n    </div><br><br>\n    <div class=\"button-group\">\n        <button type=\"submit\" class=\"button\">Autentificare</button>\n        <button type=\"button\" routerLink=\"../register\" class=\"button\">Înregistrare</button>\n    </div>\n</form>","import { UsersModel } from './../../../Models/users-model/users-model.model';\nimport { UsersServiceService } from './../../../Services/users-service/users-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private userService: UsersServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  user: UsersModel | undefined;\n  userId!: number;\n  firstLastName!: string;\n  phoneNumber!: string;\n  email!: string;\n  username!: string;\n  password!: string;\n  latitude: number = 0;\n  longitude: number = 0;\n  isAdmin: string = \"false\";\n  profilePhoto!: File;\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  userSaveForm = new FormGroup({\n    userFirstLastName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    userPhoneNumber: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]),\n    userEmail: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    uUsername: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    userPassword: new FormControl('', [Validators.required, Validators.minLength(4)]),\n  });\n\n  checkUser() {\n    if (!this.firstLastName || !this.phoneNumber || !this.email || !this.username || !this.password) {\n      this.emptyData = \"Toate câmpurile sunt obloigatorii!\"\n      setTimeout(() => {\n        this.emptyData = '';\n      },\n        2000)\n    }\n    else {\n      this.createUser();\n    }\n  }\n\n  createUser() {\n    this.user = {\n      userId: null!,\n      firstLastName: this.firstLastName,\n      phoneNumber: this.phoneNumber,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      latitude: this.latitude,\n      longitude: this.longitude,\n      isAdmin: this.isAdmin,\n      profilePhoto: this.profilePhoto\n    };\n\n    console.log(this.user);\n\n    this.userService.addUser(this.user)\n      .subscribe(\n        (callback: any) => {\n          if (callback) {\n            this.successMessage = \"V-ați înregistrat cu succes!\";\n            console.log(this.successMessage)\n            setTimeout(() => {\n              this.successMessage = '';\n              this.router.navigateByUrl('login-register/login');\n              console.log(callback)\n            },\n              2000)\n          }\n          else {\n            this.failMessage = \"Ceva nu e bine. Încercă din nou!\";\n            setTimeout(() => {\n              this.failMessage = '';\n              this.userSaveForm.reset();\n            },\n              2000)\n          }\n        },\n\n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n            this.userSaveForm.reset();\n          },\n            4000)\n        })\n  }\n}\n","<form [formGroup]=\"userSaveForm\" id=\"register\" class=\"input-group\">\n    <div class=\"form-title text-center py-2\">\n        <h4>Înregistrare</h4>\n        <hr>\n    </div><br>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"nume_prenume\" [(ngModel)]=\"firstLastName\" formControlName=\"userFirstLastName\"\n            placeholder=\"Nume și Prenume\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"nr_telefon\" [(ngModel)]=\"phoneNumber\" formControlName=\"userPhoneNumber\"\n            placeholder=\"Număr de telefon\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"email\" name=\"adr_email\" [(ngModel)]=\"email\" formControlName=\"userEmail\" placeholder=\"E-mail\"\n            class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"nume_utilizator\" [(ngModel)]=\"username\" formControlName=\"uUsername\"\n            placeholder=\"Nume utilizator\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"password\" name=\"parola\" [(ngModel)]=\"password\" formControlName=\"userPassword\" placeholder=\"Parola\"\n            class=\"form-control\" required>\n    </div>\n    <div class=\"button-group\">\n        <div class=\"form-group\">\n            <div class=\"alert-msg\">\n                <div style=\"color: red; font-size: 16px\">\n                    {{emptyData}}\n                </div>\n                <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                    <strong>Felicitări!</strong> {{ successMessage }}\n                </div>\n                <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                    <strong>Uups!</strong> {{ failMessage }}\n                </div>\n            </div>\n        </div>\n        <button type=\"submit\" (click)=\"checkUser()\" class=\"button\">Înregistrare</button>\n        <button type=\"button\" routerLink=\"../login\" class=\"button\">Autentificare</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form id=\"reset-pass\" class=\"input-group\" action=\"#\" method=\"post\">\n    <div class=\"form-title\">\n        <h4>Resetează parola</h4><hr>\n    </div><br>\n    \n    <div class=\"form-group\">\n        <input type=\"text\" name=\"new_password\" placeholder=\"Introduceți noua parolă\" class=\"form-control\" required><br>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"cofirm_password\" placeholder=\"Confirmați noua parolă\" class=\"form-control\"\n            required><br>\n    </div>\n    <div class=\"button-group\">\n        <button type=\"submit\" class=\"button\">Resetare parolă</button>\n        <button type=\"button\" routerLink=\"../login\" class=\"button\">Anulare</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-hotels',\n  templateUrl: './my-hotels.component.html',\n  styleUrls: ['./my-hotels.component.css']\n})\nexport class MyHotelsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"title\">\n        <h4>\n            Cazarea mea\n        </h4>\n    </div>\n    <hr>\n    <div class=\"row restaurants\">\n        <div class=\"col-4 image\">\n            <img src=\"../../../assets/Carousel/hotel-ambient.jpg\" alt=\"\">\n        </div>\n        <div class=\"col-5 details\">\n            <h6>Hotel Ambient</h6>\n            Adresa: ...\n        </div>\n        <div class=\"col-3\">\n            Rating\n        </div>\n    </div>\n    <hr>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  isHiddenEditProfileForm : boolean = false;\n  isHiddenEditPasswordForm : boolean = true;\n\n  toggleEditProfile(){\n    this.isHiddenEditProfileForm = false;\n    this.isHiddenEditPasswordForm = true;\n  }\n\n  toggleEditPassword(){\n    this.isHiddenEditProfileForm = true;\n    this.isHiddenEditPasswordForm = false;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"card-profile\">\n        <div class=\"title\">\n            <h4>Profilul meu</h4>\n        </div>\n        <hr>\n\n        <div class=\"row\">\n            <div class=\"col-md-5 m-auto profile\">\n                <img src=\"../../../assets/profile-photo.jpg\" alt=\"profile photo\" class=\"profile-photo\"><br>\n                <div class=\"user-name\" style=\"text-align: center;\">\n                    <h5>Nume utilizator</h5>\n                </div>\n                <button type=\"button\" class=\"edit-button\">Editează poza de profil</button>\n            </div>\n            \n            <hr>\n            <div class=\"col-md-7 m-auto profile-form\">\n                <div class=\"choose-button\">\n                    <button type=\"button\" (click)=\"toggleEditProfile()\" class=\"button\">Editare date personale</button>\n                    <button type=\"button\" (click)=\"toggleEditPassword()\" class=\"button\">Schimbă parola</button>\n                </div>\n    \n                <form [hidden] = \"isHiddenEditProfileForm\" class=\"form-group\">\n                    <label for=\"last-name\">Nume și Prenume</label>\n                    <input type=\"text\" name=\"last-name\" class=\"form-control\">\n                    <label for=\"adress\">Adresa</label>\n                    <input type=\"text\" name=\"adress\" class=\"form-control\">\n                    <label for=\"city\">Localitate</label>\n                    <input type=\"text\" name=\"city\" class=\"form-control\">\n                    <label for=\"region\">Județ</label>\n                    <input type=\"text\" name=\"region\" class=\"form-control\">\n                    <label for=\"country\">Țara</label>\n                    <input type=\"text\" name=\"country\" class=\"form-control\"><br>\n    \n                    <button type=\"submit\" class=\"button  update-button\">Actualizează datele</button>\n                </form>\n    \n                <form [hidden] = \"isHiddenEditPasswordForm\" class=\"form-group\">\n                    <label for=\"new-password\">Introduceți noua parolă</label>\n                    <input type=\"text\" name=\"new-password\" class=\"form-control\">\n                    <label for=\"confirm-password\">Confirmați parola</label>\n                    <input type=\"text\" name=\"confirm-password\" class=\"form-control\"><br>\n    \n                    <button type=\"submit\" class=\"button\">Resetează parola</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-restaurants',\n  templateUrl: './my-restaurants.component.html',\n  styleUrls: ['./my-restaurants.component.css']\n})\nexport class MyRestaurantsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"title\">\n        <h4>\n            Restaurentele mele\n        </h4>\n    </div>\n    <hr>\n    <div class=\"row restaurants\">\n        <div class=\"col-4 image\">\n            <img src=\"../../../assets/Restaurante/greek-restaurant.jpg\" alt=\"\">\n        </div>\n        <div class=\"col-5 details\">\n            <h6>Restaurant Athanasios</h6>\n            Adresa: ...\n        </div>\n        <div class=\"col-3\">\n            Rating\n        </div>\n    </div>\n    <hr>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  opened: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container>\n    <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\">\n        <div class=\"sidenav-menu\">\n            <div style=\"text-align: center;\">\n                <img src=\"../../../assets/profile-photo.jpg\" class=\"profile-image\">\n                <h4>Nume utilizator</h4>\n            </div>\n            <ul style=\"list-style-type:none\">\n                <li><a routerLink=\"home\" (click)=\"sidenav.toggle()\"><i class=\"fas fa-home\"></i>Acasă</a></li>\n                <li><a routerLink=\"my-profile\" (click)=\"sidenav.toggle()\"><i class=\"fas fa-address-card\"></i>Profilul meu</a></li>\n                <li><a routerLink=\"my-restaurants\" (click)=\"sidenav.toggle()\"><i class=\"fas fa-utensils\"></i>Restaurantele mele</a></li>\n                <li><a routerLink=\"my-hotels\" (click)=\"sidenav.toggle()\"><i class=\"fas fa-hotel\"></i>Cazarea mea</a></li>\n            </ul>  \n            <div>\n                <a class=\"logout_btn\" mat-raised-button routerLink=\"\\\">Deconectare</a>\n            </div> \n        </div>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <mat-toolbar class=\"mat-elevation-z8\">\n            <button mat-icon-button aria-label=\"menu icon\" (click)=\"sidenav.toggle()\">\n                <mat-icon>menu</mat-icon>\n            </button>\n            <span>Brașov</span>\n\n            <div class=\"spacer\"></div>\n   \n            <a mat-button routerLink=\"home\">Acasă</a>\n            <a mat-button routerLink=\"hotels\">Hoteluri</a>\n            <a mat-button routerLink=\"restaurants\">Restaurante</a>\n            <a class=\"login_btn\" mat-raised-button routerLink=\"login-register\">Autentificare/Înregistrare</a>\n        </mat-toolbar>\n        <div class=\"page-content\">\n            <router-outlet></router-outlet>\n        </div>\n   \n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-restaurants',\n  templateUrl: './restaurants.component.html',\n  styleUrls: ['./restaurants.component.css']\n})\nexport class RestaurantsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"title\">\n        <h4>Restaurante în Brașov</h4>\n    </div>\n    <hr>\n    <div class=\"row restaurants\">\n        <div class=\"col-4 image\">\n            <img src=\"../../../assets/Restaurante/greek-restaurant.jpg\" alt=\"\">\n        </div>\n        <div class=\"col-5 details\">\n            <h6>Restaurant Athanasios</h6>\n            Adresa: ...\n        </div>\n        <div class=\"col-3\">\n            Rating\n        </div>\n    </div>\n    <hr>\n</div>\n","export class HotelModel {\n    hotelId!: number;\n    name!: string;\n    address!: string;\n    price!: number;\n    rooms!: number;\n    adults!: number;\n    children!: number;\n    latitude!: number;\n    longitude!: number;\n    photo!: File;\n}\n","export class RestaurantModel {\n    restaurantId!: number;\n    name!: string;\n    address!: string;\n    schedule!: string;\n    latitude!: number;\n    longitude!: number;\n    photo!: File;\n}\n","export class TouristicObjectiveModel {\n    objectiveId!: number;\n    name!: string;\n    address!: string;\n    description!: string;\n    schedule!: string;\n    latitude!: number;\n    longitude!: number;\n    photo!: File;\n}\n","export class UserLogin {\n    username!: string;\n    password!: string;\n}\n","export class UsersModel {\n    userId!: number;\n    firstLastName!: string;\n    phoneNumber!: string;\n    email!: string;\n    username!: string;\n    password!: string;\n    latitude!: number;\n    longitude!: number;\n    isAdmin!: string;\n    profilePhoto!: File;\n}\n","import { HotelModel } from './../../Models/hotel-model/hotel-model.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HotelServiceService {\n\n  constructor(private http: HttpClient) { }\n  \n  readonly APIUrl = \"http://localhost:5000/api/Hotel\";\n  \n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  getHotelsList(): Observable<HotelModel[]> {\n    return this.http.get<HotelModel[]>(this.APIUrl);\n  }\n\n  getHotel(id: number): Observable<HotelModel>{\n    return this.http.get<HotelModel>(`${this.APIUrl}/${id}`);\n  }\n\n  addHotel(hotel: HotelModel): Observable<HotelModel> {\n    const newHotel = new HotelModel();\n    newHotel.name = hotel.name;\n    newHotel.address = hotel.address;\n    newHotel.price = hotel.price;\n    newHotel.rooms = hotel.rooms;\n    newHotel.adults = hotel.adults;\n    newHotel.children = hotel.children;\n    newHotel.latitude = hotel.latitude;\n    newHotel.longitude = hotel.longitude;\n    // formData.photo = hotel.photo;\n    return this.http.post<HotelModel>(this.APIUrl, newHotel);\n  }\n\n  updateHotel(id: number, hotel: HotelModel): Observable<HotelModel> {\n    return this.http.put<HotelModel>(`${this.APIUrl}/${id}`, hotel);\n  }\n\n  deleteHotel(id: number): Observable<HotelModel> {\n    return this.http.delete<HotelModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val: any): Observable<HotelModel> {\n    return this.http.post<HotelModel>(this.APIUrl + '/SaveFile', val);\n  }\n}\n","import { ReservationModel } from './../../Models/reservation-model/reservation-model.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationServiceService {\n\n  readonly APIUrl = \"http://localhost:5000/api/Reservation\";\n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  constructor(private http:HttpClient) { }\n\n  getReservationsList(): Observable<ReservationModel[]>{\n    return this.http.get<ReservationModel[]>(this.APIUrl);\n  }\n\n  addReservation(reservation: ReservationModel): Observable<ReservationModel>{\n    return this.http.post<ReservationModel>(this.APIUrl, reservation);\n  }\n\n  updateReservation(id: number, reservation: ReservationModel): Observable<ReservationModel>{\n    return this.http.put<ReservationModel>(`${this.APIUrl}/${id}`, reservation);\n  }\n\n  deleteReservation(id: number): Observable<ReservationModel>{\n    return this.http.delete<ReservationModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val:any): Observable<ReservationModel>{\n    return this.http.post<ReservationModel>(this.APIUrl+'/SaveFile', val);\n  }\n}\n","import { RestaurantModel } from './../../Models/restaurant-model/restaurant-model.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  readonly APIUrl = \"http://localhost:5000/api/Restaurant\";\n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  getRestaurantsList(): Observable<RestaurantModel[]>{\n    return this.http.get<RestaurantModel[]>(this.APIUrl);\n  }\n\n  getRestaurant(id: number): Observable<RestaurantModel>{\n    return this.http.get<RestaurantModel>(`${this.APIUrl}/${id}`);\n  }\n\n  addRestaurant(restaurant: RestaurantModel): Observable<RestaurantModel>{\n    const newRestaurant = new RestaurantModel();\n    newRestaurant.name = restaurant.name;\n    newRestaurant.address = restaurant.address;\n    newRestaurant.schedule = restaurant.schedule;\n    newRestaurant.latitude = restaurant.latitude;\n    newRestaurant.longitude = restaurant.longitude;\n    newRestaurant.photo = restaurant.photo;\n    return this.http.post<RestaurantModel>(this.APIUrl, newRestaurant);\n  }\n\n  updateRestaurant(id: number, restaurant: RestaurantModel): Observable<RestaurantModel>{\n    return this.http.put<RestaurantModel>(`${this.APIUrl}/${id}`, restaurant);\n  }\n\n  deleteRestaurant(id: number): Observable<RestaurantModel>{\n    return this.http.delete<RestaurantModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val:any): Observable<RestaurantModel>{\n    return this.http.post<RestaurantModel>(this.APIUrl+'/SaveFile', val);\n  }\n}\n","import { TouristicObjectiveModel } from './../../Models/touristic-objective-model/touristic-objective-model.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TouristicObjectiveServiceService {\n\n  readonly APIUrl = \"http://localhost:5000/api/TouristicObjective\";\n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  constructor(private http:HttpClient) { }\n\n  getTouristicObjectivesList(): Observable<TouristicObjectiveModel[]>{\n    return this.http.get<TouristicObjectiveModel[]>(this.APIUrl);\n  }\n\n  getTouristicObjective(id: number): Observable<TouristicObjectiveModel>{\n    return this.http.get<TouristicObjectiveModel>(`${this.APIUrl}/${id}`);\n  }\n\n  addTouristicObjective(objective: TouristicObjectiveModel): Observable<TouristicObjectiveModel>{\n    const newObjective = new TouristicObjectiveModel();\n    newObjective.name = objective.name;\n    newObjective.address = objective.address;\n    newObjective.description = objective.description;\n    newObjective.schedule = objective.schedule;\n    newObjective.latitude = objective.latitude;\n    newObjective.longitude = objective.longitude;\n    newObjective.photo = objective.photo;\n    return this.http.post<TouristicObjectiveModel>(this.APIUrl, newObjective);\n  }\n\n  updateTouristicObjective(id: number, objective: TouristicObjectiveModel): Observable<TouristicObjectiveModel>{\n    return this.http.put<TouristicObjectiveModel>(`${this.APIUrl}/${id}`, objective);\n  }\n\n  deleteTouristicObjective(id: number): Observable<TouristicObjectiveModel>{\n    return this.http.delete<TouristicObjectiveModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val:any): Observable<TouristicObjectiveModel>{\n    return this.http.post<TouristicObjectiveModel>(this.APIUrl+'/touristicobjective/SaveFile', val);\n  }\n}\n","import { UserLogin } from './../../Models/users-model/user-login.model';\nimport { UsersModel } from './../../Models/users-model/users-model.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  readonly APIUrl = \"http://localhost:5000/api/Users\";\n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  getUsersList(): Observable<UsersModel[]>{\n    return this.http.get<UsersModel[]>(this.APIUrl);\n  }\n\n  getUser(id: number): Observable<UsersModel>{\n    return this.http.get<UsersModel>(`${this.APIUrl}/${id}`);\n  }\n\n  addUser(user: UsersModel): Observable<UsersModel>{\n    const newUser = new UsersModel();\n    newUser.firstLastName = user.firstLastName;\n    newUser.phoneNumber = user.phoneNumber;\n    newUser.email = user.email;\n    newUser.username = user.username;\n    newUser.password = user.password;\n    newUser.latitude = user.latitude;\n    newUser.longitude = user.longitude;\n    newUser.isAdmin = user.isAdmin;\n    // newUser.profilePhoto = user.profilePhoto;\n    return this.http.post<UsersModel>(this.APIUrl, newUser);\n  }\n\n  login(user: UserLogin): Observable<UsersModel>{\n    const userForm = new UserLogin();\n    userForm.username = user.username;\n    userForm.password = user.password;\n    return this.http.post<UsersModel>(`${this.APIUrl}`+ '/login', userForm);\n  }\n\n  updateUser(id: number, user: UsersModel): Observable<UsersModel>{\n    return this.http.put<UsersModel>(`${this.APIUrl}/${id}`, user);\n  }\n\n  deleteUser(id: number): Observable<UsersModel>{\n    return this.http.delete<UsersModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val:any): Observable<UsersModel>{\n    return this.http.post<UsersModel>(this.APIUrl+'/SaveFile', val);\n  }\n\n  // getPublicContent(): Observable<any> {\n  //   return this.http.get(this.APIUrl + '/all', { responseType: 'text' });\n  // }\n\n  // getUserBoard(): Observable<any> {\n  //   return this.http.get(this.APIUrl + '/user', { responseType: 'text' });\n  // }\n\n  // getAdminBoard(): Observable<any> {\n  //   return this.http.get(this.APIUrl + '/admin', { responseType: 'text' });\n  // }\n}\n","import { ResetPasswordComponent } from './Components/login-register/reset-password/reset-password.component';\nimport { ForgottenPasswordComponent } from './Components/login-register/forgotten-password/forgotten-password.component';\nimport { RegisterComponent } from './Components/login-register/register/register.component';\nimport { LoginComponent } from './Components/login-register/login/login.component';\nimport { AdminReservationsComponent } from './Components/admin-page/admin-reservations/admin-reservations.component';\nimport { ViewObjectivesComponent } from './Components/admin-page/admin-touristic-objective/view-objectives/view-objectives.component';\nimport { EditObjectiveComponent } from './Components/admin-page/admin-touristic-objective/edit-objective/edit-objective.component';\nimport { AddObjectiveComponent } from './Components/admin-page/admin-touristic-objective/add-objective/add-objective.component';\nimport { ViewRestaurantsComponent } from './Components/admin-page/admin-restaurants/view-restaurants/view-restaurants.component';\nimport { EditRestaurantComponent } from './Components/admin-page/admin-restaurants/edit-restaurant/edit-restaurant.component';\nimport { AddRestaurantComponent } from './Components/admin-page/admin-restaurants/add-restaurant/add-restaurant.component';\nimport { AddHotelComponent } from './Components/admin-page/admin-hotels/add-hotel/add-hotel.component';\nimport { AdminPageComponent } from './Components/admin-page/admin-page.component';\nimport { ItemsCarouselComponent } from './Components/home/items-carousel/items-carousel.component';\nimport { ToDoComponent } from './Components/home/to-do/to-do.component';\nimport { EatComponent } from './Components/home/eat/eat.component';\nimport { StayComponent } from './Components/home/stay/stay.component';\nimport { MapComponent } from './Components/home/map/map.component';\nimport { HomeComponent } from './Components/home/home.component';\nimport { CarouselComponent } from './Components/hotels/carousel/carousel.component';\nimport { LoginRegisterComponent } from './Components/login-register/login-register.component';\nimport { RestaurantsComponent } from './Components/restaurants/restaurants.component';\nimport { HotelsComponent } from './Components/hotels/hotels.component';\nimport { MyProfileComponent } from './Components/my-profile/my-profile.component';\nimport { MyRestaurantsComponent } from './Components/my-restaurants/my-restaurants.component';\nimport { MyHotelsComponent } from './Components/my-hotels/my-hotels.component';\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewHotelsComponent } from './Components/admin-page/admin-hotels/view-hotels/view-hotels.component';\nimport { EditHotelComponent } from './Components/admin-page/admin-hotels/edit-hotel/edit-hotel.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'my-profile',\n    component: MyProfileComponent\n  },\n  {\n    path: 'hotels',\n    component: HotelsComponent\n  },\n  {\n    path: 'restaurants',\n    component: RestaurantsComponent\n  },\n  {\n    path: 'login-register',\n    component: LoginRegisterComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'register',\n        component: RegisterComponent\n      },\n      {\n        path: 'forgotten-password',\n        component: ForgottenPasswordComponent\n      },\n      {\n        path: 'reset-password',\n        component: ResetPasswordComponent\n      }\n    ]\n  },\n  {\n    path: 'my-restaurants',\n    component: MyRestaurantsComponent\n  },\n  {\n    path: 'my-hotels',\n    component: MyHotelsComponent\n  },\n  {\n    path: 'carousel',\n    component: CarouselComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'map',\n    component: MapComponent\n  },\n  {\n    path: 'to-do',\n    component: ToDoComponent\n  },\n  {\n    path: 'stay',\n    component: StayComponent\n  },\n  {\n    path: 'eat',\n    component: EatComponent\n  },\n  {\n    path: 'items-carousel',\n    component: ItemsCarouselComponent\n  },\n  {\n    path: 'admin-page',\n    component: AdminPageComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'admin-reservation',\n        pathMatch: 'full'\n      },\n      {\n        path: 'admin-reservation',\n        component: AdminReservationsComponent\n      },\n      {\n        path: 'view-hotels',\n        component: ViewHotelsComponent\n      },\n      {\n        path: 'add-hotel',\n        component: AddHotelComponent\n      },\n      {\n        path: 'edit-hotel/:id',\n        component: EditHotelComponent\n      },\n      {\n        path: 'add-restaurant',\n        component: AddRestaurantComponent\n      },\n      {\n        path: 'edit-restaurant/:id',\n        component: EditRestaurantComponent\n      },\n      {\n        path: 'view-restaurants',\n        component: ViewRestaurantsComponent\n      },\n      {\n        path: 'add-objective',\n        component: AddObjectiveComponent\n      },\n      {\n        path: 'edit-objective/:id',\n        component: EditObjectiveComponent\n      },\n      {\n        path: 'view-objectives',\n        component: ViewObjectivesComponent\n      }\n    ]\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularApp';\n}\n","<main class=\"content\">\n    <app-navbar></app-navbar>\n    <router-outlet></router-outlet>\n</main>\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\r\n\r\n// import { authInterceptorProviders } from './_helpers/auth.interceptor';\r\n\r\nimport { CarouselModule, WavesModule, MDBBootstrapModulesPro } from 'ng-uikit-pro-standard'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginRegisterComponent } from './Components/login-register/login-register.component';\r\nimport { MyProfileComponent } from './Components/my-profile/my-profile.component';\r\nimport { RestaurantsComponent } from './Components/restaurants/restaurants.component';\r\nimport { HotelsComponent } from './Components/hotels/hotels.component';\r\nimport { NavbarComponent } from './Components/navbar/navbar.component';\r\nimport { MyRestaurantsComponent } from './Components/my-restaurants/my-restaurants.component';\r\nimport { MyHotelsComponent } from './Components/my-hotels/my-hotels.component';\r\nimport { CarouselComponent } from './Components/hotels/carousel/carousel.component';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { IgxButtonModule, IgxToggleModule } from \"igniteui-angular\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HomeComponent } from './Components/home/home.component';\r\nimport { GalleryComponent } from './Components/home/gallery/gallery.component';\r\nimport { MapComponent } from './Components/home/map/map.component';\r\nimport { ToDoComponent } from './Components/home/to-do/to-do.component';\r\nimport { StayComponent } from './Components/home/stay/stay.component';\r\nimport { EatComponent } from './Components/home/eat/eat.component';\r\nimport { ItemsCarouselComponent } from './Components/home/items-carousel/items-carousel.component';\r\nimport { AdminPageComponent } from './Components/admin-page/admin-page.component';\r\nimport { HotelServiceService } from './Services/hotel-service/hotel-service.service';\r\nimport { ReservationServiceService } from './Services/reservation-service/reservation-service.service';\r\nimport { RestaurantServiceService } from './Services/restaurant-service/restaurant-service.service';\r\nimport { TouristicObjectiveServiceService } from './Services/touristic-objective-service/touristic-objective-service.service';\r\nimport { UsersServiceService } from './Services/users-service/users-service.service';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AddHotelComponent } from './Components/admin-page/admin-hotels/add-hotel/add-hotel.component';\r\nimport { EditHotelComponent } from './Components/admin-page/admin-hotels/edit-hotel/edit-hotel.component';\r\nimport { ViewHotelsComponent } from './Components/admin-page/admin-hotels/view-hotels/view-hotels.component';\r\nimport { AddRestaurantComponent } from './Components/admin-page/admin-restaurants/add-restaurant/add-restaurant.component';\r\nimport { ViewRestaurantsComponent } from './Components/admin-page/admin-restaurants/view-restaurants/view-restaurants.component';\r\nimport { EditRestaurantComponent } from './Components/admin-page/admin-restaurants/edit-restaurant/edit-restaurant.component';\r\nimport { AddObjectiveComponent } from './Components/admin-page/admin-touristic-objective/add-objective/add-objective.component';\r\nimport { EditObjectiveComponent } from './Components/admin-page/admin-touristic-objective/edit-objective/edit-objective.component';\r\nimport { ViewObjectivesComponent } from './Components/admin-page/admin-touristic-objective/view-objectives/view-objectives.component';\r\nimport { AdminReservationsComponent } from './Components/admin-page/admin-reservations/admin-reservations.component';\r\nimport { LoginComponent } from './Components/login-register/login/login.component';\r\nimport { RegisterComponent } from './Components/login-register/register/register.component';\r\nimport { ForgottenPasswordComponent } from './Components/login-register/forgotten-password/forgotten-password.component';\r\nimport { ResetPasswordComponent } from './Components/login-register/reset-password/reset-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginRegisterComponent,\r\n    MyProfileComponent,\r\n    RestaurantsComponent,\r\n    HotelsComponent,\r\n    NavbarComponent,\r\n    MyRestaurantsComponent,\r\n    MyHotelsComponent,\r\n    CarouselComponent,\r\n    HomeComponent,\r\n    GalleryComponent,\r\n    MapComponent,\r\n    ToDoComponent,\r\n    StayComponent,\r\n    EatComponent,\r\n    ItemsCarouselComponent,\r\n    AdminPageComponent,\r\n    AddHotelComponent,\r\n    EditHotelComponent,\r\n    ViewHotelsComponent,\r\n    AddRestaurantComponent,\r\n    ViewRestaurantsComponent,\r\n    EditRestaurantComponent,\r\n    AddObjectiveComponent,\r\n    EditObjectiveComponent,\r\n    ViewObjectivesComponent,\r\n    AdminReservationsComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ForgottenPasswordComponent,\r\n    ResetPasswordComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    BrowserAnimationsModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSlideToggleModule,\r\n    IgxButtonModule,\r\n    IgxToggleModule,\r\n    NgbModule,\r\n    GoogleMapsModule,\r\n    HttpClientModule,\r\n    HttpClientJsonpModule,\r\n    CarouselModule,\r\n    WavesModule,\r\n    ToastrModule.forRoot(),\r\n    MDBBootstrapModulesPro.forRoot()\r\n  ],\r\n  providers: [\r\n    HotelServiceService,\r\n    ReservationServiceService,\r\n    RestaurantServiceService,\r\n    TouristicObjectiveServiceService,\r\n    UsersServiceService,\r\n    // authInterceptorProviders\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}