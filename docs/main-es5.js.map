{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/Components/admin-page/admin-hotels/add-hotel/add-hotel.component.html","webpack:///src/app/Components/admin-page/admin-hotels/add-hotel/add-hotel.component.ts","webpack:///src/app/Components/admin-page/admin-hotels/edit-hotel/edit-hotel.component.html","webpack:///src/app/Components/admin-page/admin-hotels/edit-hotel/edit-hotel.component.ts","webpack:///src/app/Components/admin-page/admin-hotels/view-hotels/view-hotels.component.html","webpack:///src/app/Components/admin-page/admin-hotels/view-hotels/view-hotels.component.ts","webpack:///src/app/Components/admin-page/admin-page.component.ts","webpack:///src/app/Components/admin-page/admin-page.component.html","webpack:///src/app/Components/admin-page/admin-reservations/admin-reservations.component.html","webpack:///src/app/Components/admin-page/admin-reservations/admin-reservations.component.ts","webpack:///src/app/Components/admin-page/admin-restaurants/add-restaurant/add-restaurant.component.html","webpack:///src/app/Components/admin-page/admin-restaurants/add-restaurant/add-restaurant.component.ts","webpack:///src/app/Components/admin-page/admin-restaurants/edit-restaurant/edit-restaurant.component.html","webpack:///src/app/Components/admin-page/admin-restaurants/edit-restaurant/edit-restaurant.component.ts","webpack:///src/app/Components/admin-page/admin-restaurants/view-restaurants/view-restaurants.component.html","webpack:///src/app/Components/admin-page/admin-restaurants/view-restaurants/view-restaurants.component.ts","webpack:///src/app/Components/admin-page/admin-touristic-objective/add-objective/add-objective.component.html","webpack:///src/app/Components/admin-page/admin-touristic-objective/add-objective/add-objective.component.ts","webpack:///src/app/Components/admin-page/admin-touristic-objective/edit-objective/edit-objective.component.html","webpack:///src/app/Components/admin-page/admin-touristic-objective/edit-objective/edit-objective.component.ts","webpack:///src/app/Components/admin-page/admin-touristic-objective/view-objectives/view-objectives.component.html","webpack:///src/app/Components/admin-page/admin-touristic-objective/view-objectives/view-objectives.component.ts","webpack:///src/app/Components/home/eat/eat.component.ts","webpack:///src/app/Components/home/eat/eat.component.html","webpack:///src/app/Components/home/gallery/gallery.component.html","webpack:///src/app/Components/home/gallery/gallery.component.ts","webpack:///src/app/Components/home/home.component.ts","webpack:///src/app/Components/home/home.component.html","webpack:///src/app/Components/home/items-carousel/items-carousel.component.html","webpack:///src/app/Components/home/items-carousel/items-carousel.component.ts","webpack:///src/app/Components/home/map/map.component.html","webpack:///src/app/Components/home/map/map.component.ts","webpack:///src/app/Components/home/stay/stay.component.ts","webpack:///src/app/Components/home/stay/stay.component.html","webpack:///src/app/Components/home/to-do/to-do.component.ts","webpack:///src/app/Components/home/to-do/to-do.component.html","webpack:///src/app/Components/hotels/carousel/carousel.component.html","webpack:///src/app/Components/hotels/carousel/carousel.component.ts","webpack:///src/app/Components/hotels/hotels.component.ts","webpack:///src/app/Components/hotels/hotels.component.html","webpack:///src/app/Components/login-register/forgotten-password/forgotten-password.component.ts","webpack:///src/app/Components/login-register/forgotten-password/forgotten-password.component.html","webpack:///src/app/Components/login-register/login-register.component.ts","webpack:///src/app/Components/login-register/login-register.component.html","webpack:///src/app/Components/login-register/login/login.component.ts","webpack:///src/app/Components/login-register/login/login.component.html","webpack:///src/app/Components/login-register/register/register.component.html","webpack:///src/app/Components/login-register/register/register.component.ts","webpack:///src/app/Components/login-register/reset-password/reset-password.component.ts","webpack:///src/app/Components/login-register/reset-password/reset-password.component.html","webpack:///src/app/Components/my-hotels/my-hotels.component.ts","webpack:///src/app/Components/my-hotels/my-hotels.component.html","webpack:///src/app/Components/my-profile/my-profile.component.ts","webpack:///src/app/Components/my-profile/my-profile.component.html","webpack:///src/app/Components/my-restaurants/my-restaurants.component.ts","webpack:///src/app/Components/my-restaurants/my-restaurants.component.html","webpack:///src/app/Components/navbar/navbar.component.ts","webpack:///src/app/Components/navbar/navbar.component.html","webpack:///src/app/Components/restaurants/restaurants.component.ts","webpack:///src/app/Components/restaurants/restaurants.component.html","webpack:///src/app/Models/hotel-model/hotel-model.model.ts","webpack:///src/app/Models/restaurant-model/restaurant-model.model.ts","webpack:///src/app/Models/touristic-objective-model/touristic-objective-model.model.ts","webpack:///src/app/Models/users-model/user-login.model.ts","webpack:///src/app/Models/users-model/users-model.model.ts","webpack:///src/app/Services/hotel-service/hotel-service.service.ts","webpack:///src/app/Services/reservation-service/reservation-service.service.ts","webpack:///src/app/Services/restaurant-service/restaurant-service.service.ts","webpack:///src/app/Services/touristic-objective-service/touristic-objective-service.service.ts","webpack:///src/app/Services/users-service/users-service.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AddHotelComponent","hotelService","router","wrongImageFormat","HotelsList","hotelSaveForm","FormGroup","hotelName","FormControl","Validators","hotelAddress","hotelPrice","hotelRooms","hotelAdults","hotelChildren","hotelLatitude","hotelLongitude","hotelPhoto","name","address","price","rooms","adults","children","latitude","longitude","emptyData","setTimeout","createHotel","event","photo","target","files","checkExtension","test","hotel","hotelId","addHotel","subscribe","callback","successMessage","console","log","navigate","failMessage","err","error","message","reset","uploadImage","checkHotel","EditHotelComponent","route","HotelModel","paramMap","params","parseInt","get","loadData","getHotel","data","f","value","updateHotel","editHotel","ViewHotelsComponent","HotelService","refreshHotelsList","subcription","unsubscribe","confirm","deleteHotel","res","getHotelsList","AdminPageComponent","AdminReservationsComponent","reservationService","ReservationsList","refreshReservationsList","getReservationsList","AddRestaurantComponent","restaurantService","restaurantSaveForm","restaurantName","restaurantAddress","restaurantSchedule","restaurantLatitude","restaurantLongitude","restaurantPhoto","schedule","createRestaurant","restaurant","restaurantId","addRestaurant","checkRestaurant","EditRestaurantComponent","RestaurantModel","getRestaurant","updateRestaurant","editRestaurant","ViewRestaurantsComponent","RestaurantsList","refreshRestaurantsList","deleteRestaurant","getRestaurantsList","AddObjectiveComponent","objectiveService","objectiveSaveForm","objectiveName","objectiveAddress","objectiveDescription","objectiveSchedule","objectiveLatitude","objectiveLongitude","objectivePhoto","description","createObjective","objective","objectiveId","addTouristicObjective","checkObjective","EditObjectiveComponent","TouristicObjectiveModel","getTouristicObjective","updateTouristicObjective","editObjective","ViewObjectivesComponent","ObjectivesList","refreshObjectivesList","deleteTouristicObjective","getTouristicObjectivesList","EatComponent","alt","GalleryComponent","items","img","HomeComponent","ItemsCarouselComponent","cards","title","buttonText","slides","arr","chunkSize","R","i","len","length","push","slice","chunk","MapComponent","httpClient","options","center","lat","lng","zoom","apiLoaded","jsonp","pipe","map","catchError","of","StayComponent","ToDoComponent","CarouselComponent","HotelsComponent","decrement","increment","ForgottenPasswordComponent","LoginRegisterComponent","LoginComponent","formBuilder","userService","user","username","password","submitted","loginForm","group","invalid","login","RegisterComponent","isAdmin","userSaveForm","userFirstLastName","userPhoneNumber","userEmail","uUsername","userPassword","firstLastName","phoneNumber","email","createUser","userId","profilePhoto","addUser","navigateByUrl","checkUser","ResetPasswordComponent","MyHotelsComponent","MyProfileComponent","isHiddenEditProfileForm","isHiddenEditPasswordForm","toggleEditProfile","toggleEditPassword","MyRestaurantsComponent","NavbarComponent","opened","RestaurantsComponent","UserLogin","UsersModel","HotelServiceService","http","APIUrl","PhotoUrl","newHotel","post","put","val","ReservationServiceService","reservation","RestaurantServiceService","newRestaurant","TouristicObjectiveServiceService","newObjective","UsersServiceService","newUser","userForm","routes","path","redirectTo","pathMatch","component","AppRoutingModule","RouterModule","AppComponent","AppModule","BrowserModule","MatToolbarModule","MatIconModule","MatButtonModule","BrowserAnimationsModule","MatSidenavModule","MatListModule","FormsModule","ReactiveFormsModule","MatSlideToggleModule","IgxButtonModule","IgxToggleModule","NgbModule","GoogleMapsModule","HttpClientModule","HttpClientJsonpModule","CarouselModule","WavesModule","ToastrModule","MDBBootstrapModulesPro","environment","production","enableProdMode","platformBrowser","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Adaugă un nou hotel</h4>\n    </div>\n    <form novalidate autocomplete=\"off\" [formGroup]=\"hotelSaveForm\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../assets/Hotels/hotel-icon.jpg\" class=\"image\" alt=\"\">        \n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" formControlName=\"hotelPhoto\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>\n                </div>\n            </div>\n            \n            <div class=\"add-hotel col-md-7 m-auto\">\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_name\" [(ngModel)]=\"name\" formControlName=\"hotelName\" \n                    placeholder=\"Nume hotel\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_address\" [(ngModel)]=\"address\" formControlName=\"hotelAddress\" \n                    placeholder=\"Adresa\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_rooms\" [(ngModel)]=\"rooms\" formControlName=\"hotelRooms\" \n                    placeholder=\"Număr camere disponibile\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_adults\" [(ngModel)]=\"adults\" formControlName=\"hotelAdults\" \n                    placeholder=\"Adulți\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_children\" [(ngModel)]=\"children\" formControlName=\"hotelChildren\" \n                    placeholder=\"Copii\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_price\" [(ngModel)]=\"price\" formControlName=\"hotelPrice\" \n                    placeholder=\"Preț\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_latitude\" [(ngModel)]=\"latitude\" formControlName=\"hotelLatitude\" \n                    placeholder=\"Latitudine\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"hotel_longitude\" [(ngModel)]=\"longitude\" formControlName=\"hotelLongitude\"\n                    placeholder=\"Longitudine\" class=\"form-control\" required>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" (click)=\"checkHotel()\" class=\"button btn btn-outline-success\">Adaugă hotel</button>\n                </div>\n            </div>\n        </div>    \n    </form>\n</div>","import { Router } from '@angular/router';\nimport { HotelModel } from './../../../../Models/hotel-model/hotel-model.model';\nimport { HotelServiceService } from './../../../../Services/hotel-service/hotel-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-hotel',\n  templateUrl: './add-hotel.component.html',\n  styleUrls: ['./add-hotel.component.css']\n})\nexport class AddHotelComponent implements OnInit {\n\n  constructor(private hotelService: HotelServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  hotel: HotelModel | undefined;\n  hotelId!: number;\n  name!: string;\n  address!: string;\n  price!: number;\n  rooms!: number;\n  adults!: number;\n  children!: number;\n  latitude!: number;\n  longitude!: number;\n  photo!: File;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  HotelsList: HotelModel[] = [];\n\n  hotelSaveForm = new FormGroup({\n    hotelName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    hotelAddress: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    hotelPrice: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelRooms: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelAdults: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelChildren: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelLatitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelLongitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    hotelPhoto: new FormControl('')\n  });\n\n  checkHotel() {\n    if (!this.name || !this.address || !this.price || !this.rooms || !this.adults || !this.children || !this.latitude\n      || !this.longitude) {\n      this.emptyData = \"Toate câmpurile sunt obloigatorii!\"\n      setTimeout(() => {\n        this.emptyData = '';\n      },\n        2000)\n    }\n    else {\n      this.createHotel();\n    }\n  }\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n  createHotel() {\n    this.hotel = {\n      hotelId: null!,\n      name: this.name,\n      address: this.address,\n      price: this.price,\n      rooms: this.rooms,\n      adults: this.adults,\n      children: this.children,\n      latitude: this.latitude,\n      longitude: this.longitude,\n      photo: this.photo\n    };\n    if (this.wrongImageFormat === '') {\n      this.hotelService.addHotel(this.hotel)\n        .subscribe(\n          (callback: any) => {\n            if (callback) {\n              this.successMessage = \"Hotel adăugat cu succes!\";\n              console.log(this.successMessage)\n              setTimeout(() => {\n                this.successMessage = '';\n                this.router.navigate(['/admin-page/view-hotels']);\n                console.log(callback)\n              },\n                2000)\n            }\n            else {\n              this.failMessage = \"Ceva nu e bine. Încercă din nou!\";\n              setTimeout(() => {\n                this.failMessage = '';\n              },\n                2000)\n            }\n          },\n\n          (err: any) => {\n            this.failMessage = err.error.message;\n            setTimeout(() => {\n              this.failMessage = \"Ceva nu este în regulă!\";\n            },\n              4000)\n          })\n      this.hotelSaveForm.reset();\n    }\n  }\n\n}\n","<div class=\"form-title\">\n    <h4>Actualizează hotel</h4>\n</div>\n<form #f=\"ngForm\" (ngSubmit)=\"editHotel(f)\">\n    <hr>\n    <div class=\"row components\">\n        <div class=\"col-md-5 m-auto\">\n            <div class=\"form-group\">\n                <img src=\"../../../assets/Hotels/hotel-icon.jpg\" class=\"image\" alt=\"\">\n                <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                    (change)=\"uploadImage($event)\" name=\"photo\" [(ngModel)]=\"hotel.photo\" required>\n                <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                <button class=\"button\">Încarcă fotografia</button>\n            </div>\n        </div>\n\n        <div class=\"add-hotel col-md-7 m-auto\">\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"id\">ID: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"hotelId\" [(ngModel)]=\"hotel.hotelId\" placeholder=\"Id hotel\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"name\">Nume hotel: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"name\" [(ngModel)]=\"hotel.name\" placeholder=\"Nume hotel\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"address\">Adresa: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"address\" [(ngModel)]=\"hotel.address\" placeholder=\"Adresa\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"rooms\">Număr camere: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"rooms\" [(ngModel)]=\"hotel.rooms\" placeholder=\"Număr camere disponibile\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"adults\">Adulți: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"adults\" [(ngModel)]=\"hotel.adults\" placeholder=\"Adulți\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"children\">Copii: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"children\" [(ngModel)]=\"hotel.children\" placeholder=\"Copii\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"price\">Preț: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"price\" [(ngModel)]=\"hotel.price\" placeholder=\"Preț\" class=\"form-control\"\n                        required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"latitude\">Latitudine: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"latitude\" [(ngModel)]=\"hotel.latitude\" placeholder=\"Latitudine\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <label class=\"col-md-3 m-auto\" for=\"longitude\">Longitudine: </label>\n                <div class=\"form-group col-md-9 m-auto\">\n                    <input type=\"text\" name=\"longitude\" [(ngModel)]=\"hotel.longitude\" placeholder=\"Longitudine\"\n                        class=\"form-control\" required>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <div class=\"alert-msg\">\n                    <div style=\"color: red; font-size: 16px\">\n                        {{emptyData}}\n                    </div>\n                    <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                        <strong>Minunat!</strong> {{ successMessage }}\n                    </div>\n                    <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                        <strong>Uups!</strong> {{ failMessage }}\n                    </div>\n                </div>\n\n                <button type=\"submit\" class=\"button btn btn-outline-success\">Actualizează hotel</button>\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HotelModel } from 'src/app/Models/hotel-model/hotel-model.model';\nimport { HotelServiceService } from 'src/app/Services/hotel-service/hotel-service.service';\n\n@Component({\n  selector: 'app-edit-hotel',\n  templateUrl: './edit-hotel.component.html',\n  styleUrls: ['./edit-hotel.component.css']\n})\nexport class EditHotelComponent implements OnInit {\n\n  hotel = new HotelModel();\n  hotelId!: number;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  constructor(private hotelService: HotelServiceService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => this.hotelId = parseInt(params.get('id')!)\n    );\n    this.loadData();\n  }\n\n  loadData() {\n    this.hotelService.getHotel(this.hotelId)\n      .subscribe(\n        (data: HotelModel) => {\n          this.hotel = data;\n          console.log(\"loadData\", data)\n        }\n      );\n  }\n\n  editHotel(f: NgForm) {\n    this.hotel = f.value;\n    console.log(\"Hotel Form: \", this.hotel);\n    this.hotelService.updateHotel(this.hotelId, f.value)\n      .subscribe(\n        data => {\n          this.successMessage = \"Hotel actualizat cu succes!\";\n          console.log(this.successMessage)\n          setTimeout(() => {\n            this.successMessage = '';\n            this.router.navigate(['/admin-page/view-hotels']);\n            console.log(data)\n          },\n            2000\n          )\n        },\n\n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n            4000)\n        }\n      )\n  }\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.hotel.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.hotel.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n}\n","<div class=\"table-responsive-md view-hotels\">\n    <div class=\"form-title\">\n        <h4>Hoteluri</h4>\n    </div>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <!-- <th>ID</th> -->\n                <th>Nume Hotel</th>\n                <th>Adresa hotelului</th>\n                <th>Număr camere</th>\n                <th>Adulți</th>\n                <th>Copii</th>\n                <th>Preț</th>\n                <th>Latitudine</th>\n                <th>Longitudine</th>\n                <th>Opțiuni</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor=\"let dataItem of HotelsList\">\n                <!-- <td>{{dataItem.hotelId}}</td> -->\n                <td>{{dataItem.name}}</td>\n                <td>{{dataItem.address}}</td>\n                <td>{{dataItem.rooms}} camere</td>\n                <td>{{dataItem.adults}} adulți</td>\n                <td>{{dataItem.children}} copii</td>\n                <td>{{dataItem.price}} RON</td>\n                <td>{{dataItem.latitude}}</td>\n                <td>{{dataItem.longitude}}</td>\n                <td>\n                    <button type=\"button\" class=\"edit btn btn-light mr-1\" routerLink=\"../edit-hotel/{{dataItem.hotelId}}\">\n                        <i class=\"far fa-edit\"></i>\n                    </button>\n                    <button type=\"button\" class=\"delete btn btn-light mr-1\" (click)=\"deleteItem(dataItem)\">\n                        <i class=\"fas fa-trash-alt\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { HotelModel } from 'src/app/Models/hotel-model/hotel-model.model';\nimport { HotelServiceService } from 'src/app/Services/hotel-service/hotel-service.service';\n\n@Component({\n  selector: 'app-view-hotels',\n  templateUrl: './view-hotels.component.html',\n  styleUrls: ['./view-hotels.component.css']\n})\nexport class ViewHotelsComponent implements OnInit, OnDestroy {\n\n  constructor(private HotelService: HotelServiceService) { }\n\n  private subcription!: Subscription;\n  HotelsList: HotelModel[] = [];\n  \n  ngOnInit(): void {\n    this.refreshHotelsList();\n  }\n\n  ngOnDestroy(){\n    if (this.subcription){\n      this.subcription.unsubscribe;\n    }\n  }\n\n  deleteItem(hotel: HotelModel) {\n    if (confirm('Ești sigur că vrei să ștergi acest hotel?')) {\n      this.HotelService.deleteHotel(hotel.hotelId)\n        .subscribe(\n          res => {\n            // this.toastr.error(\"Deleted successfully\");\n            this.refreshHotelsList();\n          },\n          err => { console.log(err) }\n        )\n    }\n  }\n\nrefreshHotelsList(){\n  this.HotelService.getHotelsList().subscribe(data=>{\n    this.HotelsList=data;\n  });\n}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.css']\n})\nexport class AdminPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"formular\">\n        <div class=\"title\">\n            <h4>Administrator</h4>\n        </div>\n        <hr>\n\n        <div class=\"forms\">\n            <div class=\"button-forms m-auto\">\n                <div class=\"btn-group mr-5\">\n                    <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\n                        <button class=\"btn\" routerLink=\"admin-reservation\" type=\"button\">Rezervări</button>\n                    </div>\n    \n                    <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\n                        <button class=\"btn\" ngbDropdownToggle>Restaurante</button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button class=\"button\" routerLink=\"view-restaurants\" ngbDropdownItem>Lista restaurante</button>\n                            <button class=\"button\" routerLink=\"add-restaurant\" ngbDropdownItem>Adaugă restaurant</button>\n                        </div>\n                    </div>\n    \n                    <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\n                        <button class=\"btn\" ngbDropdownToggle>Hoteluri</button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button class=\"button\" routerLink=\"view-hotels\" ngbDropdownItem>Lista\n                                hoteluri</button>\n                            <button class=\"button\" routerLink=\"add-hotel\" ngbDropdownItem>Adaugă hotel</button>\n                        </div>\n                    </div>\n    \n                    <div class=\"btn-group\" ngbDropdown role=\"group\" aria-label=\"Button group with nested dropdown\">\n                        <button class=\"btn\" ngbDropdownToggle>Obiective turistice</button>\n                        <div class=\"dropdown-menu\" ngbDropdownMenu>\n                            <button class=\"button\" routerLink=\"view-objectives\" ngbDropdownItem>Lista\n                                obiective turistice</button>\n                            <button class=\"button\" routerLink=\"add-objective\" ngbDropdownItem>Adaugă obiectiv</button>\n                        </div>\n                    </div>\n                </div>\n            </div>            \n\n            <div class=\"form-card\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>","<form id=\"reservation\" class=\"reservation\" action=\"#\" method=\"post\">\n    <div class=\"form-title\">\n        <h5>Rezervări</h5>\n    </div>\n    \n    <table class=\"table\">\n        <thead>\n            <tr>\n                <!-- <th>ID</th> -->\n                <th>Numele utilizatorului</th>\n                <th>Numele rezervării</th>\n                <th>Data de început</th>\n                <th>Data de final</th>\n                <th>Intervalul orar</th>\n                <th>Preț</th>\n                <th>Opțiuni</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor=\"let dataItem of ReservationsList\">\n                <!-- <td>{{dataItem.objectiveId}}</td> -->\n                <td>{{dataItem.username}}</td>\n                <td>{{dataItem.reservationName}}</td>\n                <td>{{dataItem.startDate}}</td>\n                <td>{{dataItem.endDate}}</td>\n                <td>{{dataItem.time}}</td>\n                <td>{{dataItem.price}}</td>\n                <td>\n                    <button type=\"button\" class=\"edit btn btn-light mr-1\">\n                        <i class=\"far fa-edit\"></i>\n                    </button>\n                    <button type=\"button\" class=\"delete btn btn-light mr-1\">\n                        <i class=\"fas fa-trash-alt\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ReservationModel } from 'src/app/Models/reservation-model/reservation-model.model';\nimport { ReservationServiceService } from 'src/app/Services/reservation-service/reservation-service.service';\n\n@Component({\n  selector: 'app-admin-reservations',\n  templateUrl: './admin-reservations.component.html',\n  styleUrls: ['./admin-reservations.component.css']\n})\nexport class AdminReservationsComponent implements OnInit {\n\n  constructor(private reservationService: ReservationServiceService) { }\n\n  private subcription!: Subscription;\n  ReservationsList: ReservationModel[] = [];\n  \n  ngOnInit(): void {\n    this.refreshReservationsList();\n  }\n\n  ngOnDestroy(){\n    if (this.subcription){\n      this.subcription.unsubscribe;\n    }\n  }\n\n  refreshReservationsList(){\n    this.reservationService.getReservationsList().subscribe(data=>{\n      this.ReservationsList=data;\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Adaugă un nou restaurant</h4>\n    </div>\n    <form novalidate autocomplete=\"off\" [formGroup]=\"restaurantSaveForm\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../../../assets/Restaurante/restaurant_icon1.jpg\" class=\"image\" alt=\"\">        \n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" formControlName=\"restaurantPhoto\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>\n                </div>\n            </div>\n            \n            <div class=\"add-hotel col-md-7 m-auto\">\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_name\" [(ngModel)]=\"name\" formControlName=\"restaurantName\" \n                    placeholder=\"Nume restaurant\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_address\" [(ngModel)]=\"address\" formControlName=\"restaurantAddress\" \n                    placeholder=\"Adresa\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_schedule\" [(ngModel)]=\"schedule\" formControlName=\"restaurantSchedule\" \n                    placeholder=\"Program\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_latitude\" [(ngModel)]=\"latitude\" formControlName=\"restaurantLatitude\" \n                    placeholder=\"Latitudine\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"restaurant_longitude\" [(ngModel)]=\"longitude\" formControlName=\"restaurantLongitude\"\n                    placeholder=\"Longitudine\" class=\"form-control\" required>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" (click)=\"checkRestaurant()\" class=\"button btn btn-outline-success\">Adaugă restaurant</button>\n                </div>\n            </div>\n        </div>    \n    </form>    \n</div>","import { Router } from '@angular/router';\nimport { RestaurantServiceService } from './../../../../Services/restaurant-service/restaurant-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { RestaurantModel } from 'src/app/Models/restaurant-model/restaurant-model.model';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-restaurant',\n  templateUrl: './add-restaurant.component.html',\n  styleUrls: ['./add-restaurant.component.css']\n})\nexport class AddRestaurantComponent implements OnInit {\n\n  constructor(private restaurantService: RestaurantServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  restaurant: RestaurantModel | undefined;\n  restaurantId!: number;\n  name!: string;\n  address!: string;\n  schedule!: string;\n  latitude!: number;\n  longitude!: number;\n  photo!: File;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  restaurantSaveForm = new FormGroup({\n    restaurantName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    restaurantAddress: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    restaurantSchedule: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    restaurantLatitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    restaurantLongitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    restaurantPhoto: new FormControl('')\n  });\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n  checkRestaurant() {\n    if (!this.name || !this.address || !this.schedule || !this.latitude || !this.longitude) {\n      this.emptyData = \"Toate câmpurile sunt obloigatorii!\"\n      setTimeout(() => {\n        this.emptyData = '';\n      },\n        2000)\n    }\n    else {\n      this.createRestaurant();\n    }\n  }\n\n  createRestaurant(){\n    this.restaurant = {\n      restaurantId: null!,\n      name: this.name,\n      address: this.address,\n      schedule: this.schedule,\n      latitude: this.latitude,\n      longitude: this.longitude,\n      photo: this.photo\n    };\n      if (this.wrongImageFormat === '') {\n        this.restaurantService.addRestaurant(this.restaurant)\n          .subscribe(\n            (callback: any) => {\n            if (callback) {\n              this.successMessage = \"Restaurant adăugat cu succes!\";\n                console.log(this.successMessage)\n                  setTimeout(() => {\n                    this.successMessage = '';\n                    this.router.navigate(['/admin-page/view-restaurants']);\n                    console.log(callback)\n                  },\n                  2000)\n                }\n                else {\n                  this.failMessage = \"Ceva nu e bine. Încercă din nou!\";\n                    setTimeout(() => {\n                      this.failMessage = '';\n                    },\n                  2000)\n                }\n              },\n            \n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n          4000)\n        })\n        this.restaurantSaveForm.reset();\n      }\n  }\n}\n","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Actualizează restaurant</h4>\n    </div>\n    <form #f=\"ngForm\" (ngSubmit)=\"editRestaurant(f)\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../../../assets/Restaurante/restaurant_icon1.jpg\" class=\"image\" alt=\"\">        \n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" name=\"photo\" [(ngModel)]=\"restaurant.photo\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>\n                </div>\n            </div>\n            \n            <div class=\"add-hotel col-md-7 m-auto\">\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"id\">ID: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"restaurantId\" [(ngModel)]=\"restaurant.restaurantId\" \n                        placeholder=\"Nume restaurant\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"name\">Nume restaurant: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"name\" [(ngModel)]=\"restaurant.name\" \n                        placeholder=\"Nume restaurant\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"address\">Adresa: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"address\" [(ngModel)]=\"restaurant.address\" \n                        placeholder=\"Adresa\" class=\"form-control\" required>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"schedule\">Program: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"schedule\" [(ngModel)]=\"restaurant.schedule\"\n                        placeholder=\"Program\" class=\"form-control\" required>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"latitude\">Latitudine: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"latitude\" [(ngModel)]=\"restaurant.latitude\"\n                        placeholder=\"Latitudine\" class=\"form-control\" required>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"longitude\">Longitudine: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"longitude\" [(ngModel)]=\"restaurant.longitude\"\n                        placeholder=\"Longitudine\" class=\"form-control\" required>\n                    </div>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" class=\"button btn btn-outline-success\">Actualizează restaurant</button>\n                </div>\n            </div>\n        </div>    \n    </form>    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestaurantModel } from 'src/app/Models/restaurant-model/restaurant-model.model';\nimport { RestaurantServiceService } from 'src/app/Services/restaurant-service/restaurant-service.service';\n\n@Component({\n  selector: 'app-edit-restaurant',\n  templateUrl: './edit-restaurant.component.html',\n  styleUrls: ['./edit-restaurant.component.css']\n})\nexport class EditRestaurantComponent implements OnInit {\n\n  restaurant = new RestaurantModel();\n  restaurantId!: number;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  constructor(private restaurantService: RestaurantServiceService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => this.restaurantId = parseInt(params.get('id')!)\n    );\n    this.loadData();\n  }\n\n  loadData() {\n    this.restaurantService.getRestaurant(this.restaurantId)\n      .subscribe(\n        (data: RestaurantModel) => {\n          this.restaurant = data;\n          console.log(\"loadData\", data)\n        }\n      );\n  }\n\n  editRestaurant(f: NgForm) {\n    this.restaurant = f.value;\n    console.log(\"Restaurant Form: \", this.restaurant);\n    this.restaurantService.updateRestaurant(this.restaurantId, f.value)\n      .subscribe(\n        data => {\n          this.successMessage = \"Actualizare cu succes!\";\n          console.log(this.successMessage)\n          setTimeout(() => {\n            this.successMessage = '';\n            this.router.navigate(['/admin-page/view-restaurants']);\n            console.log(data)\n          },\n            2000\n          )\n        },\n\n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n            4000)\n        }\n      )\n  }\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.restaurant.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.restaurant.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n}\n","<div class=\"table-responsive-md view-restaurants\">\n    <div class=\"form-title\">\n        <h4>Restaurante</h4>\n    </div>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <!-- <th>ID</th> -->\n                <th>Nume Restaurant</th>\n                <th>Adresa restaurantului</th>\n                <th>Program</th>\n                <th>Latitudine</th>\n                <th>Longitudine</th>\n                <th>Opțiuni</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor=\"let dataItem of RestaurantsList\">\n                <!-- <td>{{dataItem.restaurantId}}</td> -->\n                <td>{{dataItem.name}}</td>\n                <td>{{dataItem.address}}</td>\n                <td>{{dataItem.schedule}}</td>\n                <td>{{dataItem.latitude}}</td>\n                <td>{{dataItem.longitude}}</td>\n                <td>\n                    <button type=\"button\" class=\"edit btn btn-light mr-1\" routerLink=\"../edit-restaurant/{{dataItem.restaurantId}}\">\n                        <i class=\"far fa-edit\"></i>\n                    </button>\n                    <button type=\"button\" class=\"delete btn btn-light mr-1\" (click)=\"deleteItem(dataItem)\">\n                        <i class=\"fas fa-trash-alt\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { RestaurantServiceService } from './../../../../Services/restaurant-service/restaurant-service.service';\nimport { RestaurantModel } from './../../../../Models/restaurant-model/restaurant-model.model';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-view-restaurants',\n  templateUrl: './view-restaurants.component.html',\n  styleUrls: ['./view-restaurants.component.css']\n})\nexport class ViewRestaurantsComponent implements OnInit, OnDestroy {\n\n  constructor(private restaurantService: RestaurantServiceService) { }\n\n  private subcription!: Subscription;\n  RestaurantsList: RestaurantModel[] = [];\n\n  ngOnInit(): void {\n    this.refreshRestaurantsList();\n  }\n\n  ngOnDestroy(){\n    if (this.subcription){\n      this.subcription.unsubscribe;\n    }\n  }\n\n  deleteItem(restaurant: RestaurantModel) {\n    if (confirm('Ești sigur că vrei să ștergi acest hotel?')) {\n      this.restaurantService.deleteRestaurant(restaurant.restaurantId)\n        .subscribe(\n          res => {\n            // this.toastr.error(\"Deleted successfully\");\n            this.refreshRestaurantsList();\n          },\n          err => { console.log(err) }\n        )\n    }\n  }\n\n  refreshRestaurantsList(){\n    this.restaurantService.getRestaurantsList().subscribe(data=>{\n      this.RestaurantsList=data;\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Adaugă un nou obiectiv turistic</h4>\n    </div>\n    <form novalidate autocomplete=\"off\" [formGroup]=\"objectiveSaveForm\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../../../assets/Objectives/objective-icon.jpg\" class=\"image\" alt=\"\">        \n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" formControlName=\"objectivePhoto\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>\n                </div>\n            </div>\n            \n            <div class=\"add-hotel col-md-7 m-auto\">\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_name\" [(ngModel)]=\"name\" formControlName=\"objectiveName\" \n                    placeholder=\"Denumire\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_address\" [(ngModel)]=\"address\" formControlName=\"objectiveAddress\" \n                    placeholder=\"Adresa\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_description\" [(ngModel)]=\"description\" formControlName=\"objectiveDescription\" \n                    placeholder=\"Descriere\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_schedule\" [(ngModel)]=\"schedule\" formControlName=\"objectiveSchedule\" \n                    placeholder=\"Program\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_latitude\" [(ngModel)]=\"latitude\" formControlName=\"objectiveLatitude\" \n                    placeholder=\"Latitudine\" class=\"form-control\" required>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" name=\"objective_longitude\" [(ngModel)]=\"longitude\" formControlName=\"objectiveLongitude\"\n                    placeholder=\"Longitudine\" class=\"form-control\" required>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" (click)=\"checkObjective()\" class=\"button btn btn-outline-success\">Adaugă obiectiv</button>\n                </div>\n            </div>\n        </div>    \n    </form>    \n</div>","import { Router } from '@angular/router';\nimport { TouristicObjectiveModel } from './../../../../Models/touristic-objective-model/touristic-objective-model.model';\nimport { TouristicObjectiveServiceService } from './../../../../Services/touristic-objective-service/touristic-objective-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-objective',\n  templateUrl: './add-objective.component.html',\n  styleUrls: ['./add-objective.component.css']\n})\nexport class AddObjectiveComponent implements OnInit {\n\n  constructor(private objectiveService: TouristicObjectiveServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  objective: TouristicObjectiveModel | undefined;\n  objectiveId!: number;\n  name!: string;\n  address!: string;\n  description!: string;\n  schedule!: string;\n  latitude!: number;\n  longitude!: number;\n  photo!: File;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  objectiveSaveForm = new FormGroup({\n    objectiveName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    objectiveAddress: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    objectiveDescription: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    objectiveSchedule: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    objectiveLatitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    objectiveLongitude: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    objectivePhoto: new FormControl('')\n  });\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n  checkObjective() {\n    if (!this.name || !this.address || !this.description || !this.schedule || !this.latitude || !this.longitude) {\n      this.emptyData = \"Toate câmpurile sunt obloigatorii!\"\n      setTimeout(() => {\n        this.emptyData = '';\n      },\n        2000)\n    }\n    else {\n      this.createObjective();\n    }\n  }\n\n  createObjective(){\n    this.objective = {\n      objectiveId: null!,\n      name: this.name,\n      address: this.address,\n      description: this.description,\n      schedule: this.schedule,\n      latitude: this.latitude,\n      longitude: this.longitude,\n      photo: this.photo\n    };\n      if (this.wrongImageFormat === '') {\n        this.objectiveService.addTouristicObjective(this.objective)\n          .subscribe(\n            (callback: any) => {\n            if (callback) {\n              this.successMessage = \"Obiectiv turistic adăugat cu succes!\";\n                console.log(this.successMessage)\n                  setTimeout(() => {\n                    this.successMessage = '';\n                    this.router.navigate(['/admin-page/view-objectives']);\n                    console.log(callback)\n                  },\n                  2000)\n                }\n                else {\n                  this.failMessage = \"Ceva nu e bine. Încercă din nou!\";\n                    setTimeout(() => {\n                      this.failMessage = '';\n                    },\n                  2000)\n                }\n              },\n            \n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n          4000)\n        })\n        this.objectiveSaveForm.reset();\n      }\n  }\n}\n","<div class=\"container\">\n    <div class=\"form-title\">\n        <h4>Actualizează un obiectiv turistic</h4>\n    </div>\n    <form #f=\"ngForm\" (ngSubmit)=\"editObjective(f)\"><hr>\n        <div class=\"row components\">\n            <div class=\"col-md-5 m-auto\">\n                <div class=\"form-group\">\n                    <img src=\"../../../../../assets/Objectives/objective-icon.jpg\" class=\"image\" alt=\"\">\n                    <input class=\"upload py-2\" type=\"file\" accept=\".jpg,.jpef,.png,.gif\" id=\"customFile\"\n                        (change)=\"uploadImage($event)\" name=\"photo\" [(ngModel)]=\"objective.photo\" required>\n                    <div class=\"file-validation\">{{wrongImageFormat}}</div>\n                    <button class=\"button\">Încarcă fotografia</button>       \n                </div>\n            </div>\n            \n            <div class=\"edit-objective col-md-7 m-auto container-fluid\">\n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"id\">ID: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"objectiveId\" [(ngModel)]=\"objective.objectiveId\"\n                        placeholder=\"Id\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"name\">Denumire: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"name\" [(ngModel)]=\"objective.name\"\n                        placeholder=\"Denumire\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"address\">Adresa: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"address\" [(ngModel)]=\"objective.address\" \n                        placeholder=\"Adresa\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"description\">Descriere: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"description\" [(ngModel)]=\"objective.description\"\n                        placeholder=\"Descriere\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"schedule\">Program: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"schedule\" [(ngModel)]=\"objective.schedule\"\n                        placeholder=\"Program\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"latitude\">Latitudine: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"latitude\" [(ngModel)]=\"objective.latitude\"\n                        placeholder=\"Latitudine\" class=\"form-control\" required>\n                    </div>\n                </div>\n                \n                <div class=\"row\">\n                    <label class=\"col-md-2 m-auto\" for=\"longitude\">Longitudine: </label>\n                    <div class=\"form-group col-md-10 m-auto\">\n                        <input type=\"text\" name=\"longitude\" [(ngModel)]=\"objective.longitude\"\n                        placeholder=\"Longitudine\" class=\"form-control\" required>\n                    </div>\n                </div>\n        \n                <div class=\"form-group\">\n                    <div class=\"alert-msg\">\n                        <div style=\"color: red; font-size: 16px\">\n                            {{emptyData}}\n                        </div>\n                        <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                            <strong>Minunat!</strong> {{ successMessage }}\n                        </div>\n                        <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                            <strong>Uups!</strong> {{ failMessage }}\n                        </div>\n                    </div>\n        \n                    <button type=\"submit\" class=\"button btn btn-outline-success\">Actualizează obiectiv</button>\n                </div>\n            </div>\n        </div>    \n    </form>\n</div>","import { TouristicObjectiveServiceService } from './../../../../Services/touristic-objective-service/touristic-objective-service.service';\nimport { TouristicObjectiveModel } from './../../../../Models/touristic-objective-model/touristic-objective-model.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-objective',\n  templateUrl: './edit-objective.component.html',\n  styleUrls: ['./edit-objective.component.css']\n})\nexport class EditObjectiveComponent implements OnInit {\n\n  objective = new TouristicObjectiveModel();\n  objectiveId!: number;\n  wrongImageFormat: String = '';\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  constructor(private objectiveService: TouristicObjectiveServiceService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(\n      params => this.objectiveId = parseInt(params.get('id')!)\n    );\n    this.loadData();\n  }\n\n  loadData() {\n    this.objectiveService.getTouristicObjective(this.objectiveId)\n      .subscribe(\n        (data: TouristicObjectiveModel) => {\n          this.objective = data;\n          console.log(\"loadData\", data)\n        }\n      );\n  }\n\n  editObjective(f: NgForm) {\n    this.objective = f.value;\n    console.log(\"Objective Form: \", this.objective);\n    this.objectiveService.updateTouristicObjective(this.objectiveId, f.value)\n      .subscribe(\n        data => {\n          this.successMessage = \"Actualizare cu succes!\";\n          console.log(this.successMessage)\n          setTimeout(() => {\n            this.successMessage = '';\n            this.router.navigate(['/admin-page/view-objectives']);\n            console.log(data)\n          },\n            2000\n          )\n        },\n\n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n          },\n            4000)\n        }\n      )\n  }\n\n  uploadImage(event: any) {\n    this.wrongImageFormat = \"\";\n    this.objective.photo = event.target.files[0]\n    const checkExtension = (/\\.(gif|jpeg|jpg|png)$/i);\n    if (!checkExtension.test(this.objective.photo.name)) {\n      this.wrongImageFormat = \"Wrong image format. Please try again!\"\n    }\n  }\n\n}\n","<div class=\"table-responsive-md view-objectives\">\n    <div class=\"form-title\">\n        <h4>Obiective turistice</h4>\n    </div>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <!-- <th>ID</th> -->\n                <th>Denumire</th>\n                <th>Adresa</th>\n                <th>Descriere</th>\n                <th>Program</th>\n                <th>Latitudine</th>\n                <th>Longitudine</th>\n                <th>Opțiuni</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor=\"let dataItem of ObjectivesList\">\n                <!-- <td>{{dataItem.objectiveId}}</td> -->\n                <td>{{dataItem.name}}</td>\n                <td>{{dataItem.address}}</td>\n                <td>{{dataItem.description}}</td>\n                <td>{{dataItem.schedule}}</td>\n                <td>{{dataItem.latitude}}</td>\n                <td>{{dataItem.longitude}}</td>\n                <td>\n                    <button type=\"button\" class=\"edit btn btn-light mr-1\" routerLink=\"../edit-objective/{{dataItem.objectiveId}}\">\n                        <i class=\"far fa-edit\"></i>\n                    </button>\n                    <button type=\"button\" class=\"delete btn btn-light mr-1\" (click)=\"deleteItem(dataItem)\">\n                        <i class=\"fas fa-trash-alt\"></i>\n                    </button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { TouristicObjectiveModel } from './../../../../Models/touristic-objective-model/touristic-objective-model.model';\nimport { TouristicObjectiveServiceService } from './../../../../Services/touristic-objective-service/touristic-objective-service.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-view-objectives',\n  templateUrl: './view-objectives.component.html',\n  styleUrls: ['./view-objectives.component.css']\n})\nexport class ViewObjectivesComponent implements OnInit, OnDestroy {\n\n  constructor(private objectiveService: TouristicObjectiveServiceService) { }\n\n  private subcription!: Subscription;\n  ObjectivesList: TouristicObjectiveModel[] = [];\n\n  ngOnInit(): void {\n    this.refreshObjectivesList();\n  }\n\n  ngOnDestroy(){\n    if (this.subcription){\n      this.subcription.unsubscribe;\n    }\n  }\n\n  deleteItem(objective: TouristicObjectiveModel) {\n    if (confirm('Ești sigur că vrei să ștergi acest hotel?')) {\n      this.objectiveService.deleteTouristicObjective(objective.objectiveId)\n        .subscribe(\n          res => {\n            // this.toastr.error(\"Deleted successfully\");\n            this.refreshObjectivesList();\n          },\n          err => { console.log(err) }\n        )\n    }\n  }\n\n  refreshObjectivesList(){\n    this.objectiveService.getTouristicObjectivesList().subscribe(data=>{\n      this.ObjectivesList=data;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eat',\n  templateUrl: './eat.component.html',\n  styleUrls: ['./eat.component.css']\n})\nexport class EatComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n    <h5>Restaurante</h5>\n    <div class=\"row to-do\">\n        <div class=\"col-md-2\">\n            <p>\n                Nu rata locuri unde să iei masa, să bei și să sărbătorești.\n            </p>\n        </div>\n        <div class=\"col-md-10 m-auto\">\n            <app-items-carousel></app-items-carousel>\n        </div>\n    </div>\n</div>\n","<mdb-carousel class=\"carousel slide carousel-fade\" [animation]=\"'fade'\">\r\n    <mdb-carousel-item *ngFor=\"let item of items\">\r\n      <div class=\"view w-100\">\r\n        <img class=\"d-block w-100\" [src]=\"item.img\" alt=\"{{item.alt}}\">\r\n        <!-- <div class=\"mask rgba-black-light waves-light\" mdbWavesEffect></div> -->\r\n      </div>\r\n      <div class=\"carousel-caption\">\r\n        <h3 class=\"h3-responsive\">{{item.description}}</h3>\r\n        <!-- <p>First text</p> -->\r\n      </div>\r\n    </mdb-carousel-item>\r\n  </mdb-carousel>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.css']\n})\nexport class GalleryComponent implements OnInit {\n\n  items=[\n    {\n      img: '../../../../assets/Objectives/9e2f6de991858d3851013b472ce0ddbb.jpg',\n      alt: 'Cetatea Rupea',\n      description: 'Cetatea Rupea'\n    },\n    {\n      img: '../../../../assets/Objectives/castelul-bran.jpg',\n      alt: 'Castelul Bran',\n      description: 'Castelul Bran'\n    },\n    {\n      img: '../../../../assets/Objectives/3757065.jpg',\n      alt: 'Castelul Bran',\n      description: 'Castelul Bran'\n    },\n    {\n      img: '../../../../assets/Objectives/bran-castle-5.jpg',\n      alt: 'Castelul Bran',\n      description: 'Castelul Bran'\n    },\n    {\n      img: '../../../../assets/Objectives/4716740.jpg',\n      alt: 'Piața Sfatului',\n      description: 'Piața Sfatului'\n    },\n    {\n      img: '../../../../assets/Objectives/piata-sfatului.jpg',\n      alt: 'Piața Sfatului',\n      description: 'Piața Sfatului'\n    },\n    {\n      img: '../../../../assets/Objectives/brasov-piata-sfatului-HD-upperhouse.ro_.jpg',\n      alt: 'Piața Sfatului',\n      description: 'Piața Sfatului'\n    },\n    {\n      img: '../../../../assets/Objectives/poiana-brasov-1.jpg',\n      alt: 'Poiana Brașov',\n      description: 'Poiana Brașov'\n    },\n    {\n      img: '../../../../assets/Objectives/poiana-brasov.jpg',\n      alt: 'Poiana Brașov',\n      description: 'Poiana Brașov'\n    },\n    {\n      img: '../../../../assets/Objectives/Cetatea-Rasnov.jpg',\n      alt: 'Cetatea Râșnov',\n      description: 'Cetatea Râșnov'\n    },\n    {\n      img: '../../../../assets/Objectives/Lacul-Noua.jpg',\n      alt: 'Lacul Noua',\n      description: 'Lacul Noua'\n    },\n    {\n      img: '../../../../assets/Objectives/11458702Master.jpg',\n      alt: 'Lacul Noua',\n      description: 'Lacul Noua'\n    } \n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"container\">\n    <div class=\"title\">\n        <h4>Explorăm Brașovul împreună</h4>\n    </div>\n    <hr>\n\n    <div class=\"brasov\">\n        <app-gallery></app-gallery>\n        <app-map></app-map>\n        <hr>\n        <app-to-do></app-to-do>\n        <hr>\n        <app-stay></app-stay>\n        <hr>\n        <app-eat></app-eat>\n    </div>\n</div>","<mdb-carousel [isControls]=\"true\" class=\"carousel-multi-item multi-animation\" [type]=\"'carousel-multi-item'\"\n              [animation]=\"'slide'\">\n  <mdb-carousel-item *ngFor=\"let item of slides; let i = index\">\n    <div class=\"col-md-4 pb-2\" *ngFor=\"let card of item; let cardIndex = index\">\n      <mdb-card class=\"my-1 h-100\">\n        <mdb-card-img [src]=\"card.img\" alt=\"Card image cap\"></mdb-card-img>\n        <mdb-card-body>\n          <mdb-card-title>\n            <h6>{{card.title}}</h6>\n          </mdb-card-title>\n          <p>{{card.description}}</p>\n        </mdb-card-body>\n        <mdb-card-footer>\n          <a href=\"#\" mdbBtn class=\"waves-light button\" mdbWavesEffect>{{card.buttonText}}</a>\n        </mdb-card-footer>\n      </mdb-card>\n    </div>\n  </mdb-carousel-item>\n</mdb-carousel>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-items-carousel',\n  templateUrl: './items-carousel.component.html',\n  styleUrls: ['./items-carousel.component.css']\n})\nexport class ItemsCarouselComponent implements OnInit {\n\n  cards = [\n    {\n      title: 'Card Title 1',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 2',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 3',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 4',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 5',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 6',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 7',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 8',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n    {\n      title: 'Card Title 9',\n      description: 'Some quick example text to build on the card title and make up the bulk of the card content',\n      buttonText: 'Button',\n      img: 'https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20(34).jpg'\n    },\n  ];\n  slides: any = [[]];\n  chunk(arr: any, chunkSize: any) {\n    let R = [];\n    for (let i = 0, len = arr.length; i < len; i += chunkSize) {\n      R.push(arr.slice(i, i + chunkSize));\n    }\n    return R;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.slides = this.chunk(this.cards, 3);\n  }\n\n}\n","<div class=\"content\">\n    <h5>Despre Brașov</h5>\n        <div class=\"row about-brasov\">\n            <div class=\"col-md-6 description\">\n                <p>Brașov este reședința și cel mai mare oraș al judeșului Brașov, Transilvania, România.\n                    Aflat între marile trecători ale Carpaților (Bran, Predeal, Oituz, Buzău), Brașovul devine înca în urma cu 700 de ani un punct de \n                    legătură între Transilvania, Țara Românească și Moldova, precum și cu centrul Europei și Orient și totodată un puternic centru \n                    meșteșugăresc, comercial și cultural.\n                    În prezent, Brașovul este un oraș privilegiat; între granițele lui puteți să vă bucurați de crestele semețe ale munților Postăvaru, \n                    Bucegi, Piatra Mare, de Muntele Tâmpa și de una din cele mai râvnite stațiuni din România - Poiana Brașov. \n                </p>\n            </div>\n            <div class=\"col-md-6 m-auto maps\" *ngIf=\"apiLoaded | async\">\n                <google-map [options]=\"options\"></google-map>\n                <button type=\"submit\" class=\"button\">Programează o călătorie</button>\n            </div>\n        </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n\n  options: google.maps.MapOptions = {\n    center: {lat: 45.64550, lng: 25.58719},\n    zoom: 12\n  };\n\n  apiLoaded: Observable<boolean>;\n\n  constructor(httpClient: HttpClient) {\n    this.apiLoaded = httpClient.jsonp('https://maps.googleapis.com/maps/api/js?key=AIzaSyCO-radFmBvWu8enR_JlVnyx89dMb_LBTA', 'callback')\n    .pipe(\n      map(() => true),\n      catchError(() => of(false)),\n    );\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-stay',\n  templateUrl: './stay.component.html',\n  styleUrls: ['./stay.component.css']\n})\nexport class StayComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n    <h5>Hoteluri și locuri pentru cazare</h5>\n    <div class=\"row to-do\">\n        <div class=\"col-md-2\">\n            <p>\n                Un mix de locuri pitorești, cu hoteluri și locuri de cazare confortabile și călduroase.\n            </p>\n        </div>\n        <div class=\"col-md-10 m-auto\">\n            <app-items-carousel></app-items-carousel>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-do',\n  templateUrl: './to-do.component.html',\n  styleUrls: ['./to-do.component.css']\n})\nexport class ToDoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n    <h5>Atracții turistice</h5>\n    <div class=\"row to-do\">\n        <div class=\"col-md-2\">\n            <p>\n                Locuri de văzut, modalități de recreere și experiențe de neuitat.\n            </p>\n        </div>\n        <div class=\"col-md-10 m-auto\">\n            <app-items-carousel></app-items-carousel>\n        </div>\n    </div>\n</div>","<ngb-carousel>\n    <ng-template *ngFor=\"let item of items\" ngbSlide>\n        <div class=\"picsum-img-wrapper\">\n            <img [src]=\"item.img\" alt=\"{{item.alt}}\">\n        </div>\n    </ng-template>\n</ngb-carousel>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.css']\n})\nexport class CarouselComponent implements OnInit {\n\n  items = [\n    {\n      img: '../../../../assets/Carousel/pensiunea-luiza.jpg',\n      alt: 'Pensiune Luiza'\n    },\n    {\n      img: '../../../../assets/Carousel/hotel-ambient.jpg',\n      alt: 'Hotel Ambient'\n    },\n    {\n      img: '../../../../assets/Carousel/hotel-drachenhaus.jpg',\n      alt: 'Hotel Drachenaus'\n    },\n    {\n      img: '../../../../assets/Carousel/kronwell.jpg',\n      alt: 'Hotel Kronwell'\n    },\n    {\n      img: '../../../../assets/Carousel/piscina.jpg',\n      alt: 'Hotel cu piscina'\n    },\n    {\n      img: '../../../../assets/Carousel/business-standard-room.jpg',\n      alt: 'Bussines standard room'\n    }\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-hotels',\n  templateUrl: './hotels.component.html',\n  styleUrls: ['./hotels.component.css']\n})\nexport class HotelsComponent implements OnInit {\n  rooms : number = 1;\n  adults : number = 1;\n  children : number = 0;\n\n  increment(value: string){\n    if(value == 'rooms'){\n      if(this.rooms < 3){\n        this.rooms = ++ this.rooms;\n      }\n    }\n    else if(value == 'adults'){\n      if(this.adults < 6){\n        this.adults = ++ this.adults;\n      }\n    }\n    else{\n      if(this.children < 20){\n        this.children = ++this.children;\n      }\n    }\n  }\n\n  decrement(value: string){\n    if(value == 'rooms'){\n      if(this.rooms > 1){\n        this.rooms = -- this.rooms;\n      }\n    }\n    else if(value == 'adults'){\n      if(this.adults > 1){\n        this.adults = -- this.adults;\n      }\n    }\n    else{\n      if(this.children > 0){\n        this.children = -- this.children;\n      }\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"container\">\n    <section class=\"top-side\">\n        <div class=\"title\">\n            <h2>Cazare</h2>\n        </div>\n        <div class=\"row reservation\">\n            <div class=\"col-md-4 m-auto\">\n                <app-carousel></app-carousel>\n            </div>\n\n            <div class=\"col-md-8 m-auto\">\n                <div class=\"row details\">\n                    <div class=\"col-md-6 m-auto\">\n                        <div class=\"input-date\">\n                            <label>Data cazării: </label><br>\n                            <input type=\"date\" class=\"calendar\">\n                        </div>\n                        <div class=\"output-date\">\n                            <label>Data decazării: </label><br>\n                            <input type=\"date\" class=\"calendar\">\n                        </div>\n                    </div>\n                    \n                    <div class=\"guests col-md-6 m-auto\">\n                        <label>Preferințe:</label><br>\n                        <div class=\"row rooms\">\n                            <div class=\"col-6\">\n                                <i class=\"fas fa-bed\"></i>\n                                <label> Camere: </label>\n                            </div>\n                            \n                            <div class=\"col-6 m-auto input-dates\">\n                                <div class=\"input-group input-number-group\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-decrement\" (click)= \"decrement('rooms')\">-</button>\n                                    </div>\n                                    <input class=\"input-number\" type=\"number\" [(ngModel)]=\"rooms\" value=\"{{rooms}}\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-increment\" (click)= \"increment('rooms')\">+</button>\n                                    </div>\n                                </div> \n                            </div>     \n                        </div>\n\n                        <div class=\"row adults\">\n                            <div class=\"col-6 m-auto\">\n                                <i class=\"fas fa-users\"></i>\n                                <label> Adulți: </label>\n                            </div>\n                            \n                            <div class=\"col-6 m-auto input-dates\">\n                                <div class=\"input-group input-number-group\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-decrement\" (click)= \"decrement('adults')\">-</button>\n                                    </div>\n                                    <input class=\"input-number\" type=\"number\" [(ngModel)]=\"adults\" value=\"{{adults}}\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-increment\" (click)= \"increment('adults')\">+</button><br>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row children\">\n                            <div class=\"col-6 m-auto\">\n                                <i class=\"fas fa-baby\"></i>\n                                <label> Copii: </label>\n                            </div>\n                            \n                            <div class=\"col-6 m-auto input-dates\">\n                                <div class=\"input-group input-number-group\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-decrement\" (click)= \"decrement('children')\">-</button>\n                                    </div>\n                                    <input class=\"input-number\" type=\"number\" [(ngModel)]=\"children\" value=\"{{children}}\">\n                                    <div class=\"input-group-button\">\n                                        <button class=\"input-number-increment\" (click)= \"increment('children')\">+</button>\n                                    </div>\n                                </div> \n                            </div>\n                        </div>\n                    </div>\n                </div> \n\n                <div class=\"row choose-button\">\n                    <button class=\"button\">Caută</button>\n                </div>\n            </div> \n        </div>\n    </section>\n\n    <section class=\"second-side\">\n        <div class=\"row sleep\">\n            <p>„Nimic nu te face să te simți mai bine decât atunci când intri într-un pat de hotel, iar cearșafurile se simt atât de bine.” - Bobby Berk</p>\n        </div>\n        <hr>\n        <div class=\"row hotel\">\n            <div class=\"col-md-4 image-hotel\">\n                <img src=\"../../../assets/Carousel/kronwell.jpg\" alt=\"\">\n            </div>\n            <div class=\"col-md-5 name-hotel\">\n                <h5>Hotel Kronwell</h5>\n                <p>Adresa: </p>\n            </div>\n            <div class=\"col-md-3 price\">\n                <h6>Pret:</h6>\n            </div>\n        </div>\n        <hr>\n\n    </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgotten-password',\n  templateUrl: './forgotten-password.component.html',\n  styleUrls: ['./forgotten-password.component.css']\n})\nexport class ForgottenPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form id=\"forgotten-password\" class=\"input-group\" action=\"#\" method=\"post\">\n    <div class=\"form-title\">\n        <h4>Ați uitat parola?</h4><hr>\n    </div><br>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"adr_email\" placeholder=\"E-mail\" class=\"form-control\" required><br>\n    </div>\n    <div class=\"form-group\">\n        <p>Vă vom trimite un e-mail cu un link de resetare a parolei.</p>\n    </div>\n    <div class=\"button-group\">\n        <button type=\"submit\" class=\"button\">Trimiteți e-mail de resetare</button>\n        <button type=\"button\" routerLink=\"../login\" class=\"button\">Anulare</button>\n    </div>\n</form>","import { Component, ViewChild } from \"@angular/core\";\nimport { IgxToggleDirective } from \"igniteui-angular\";\n\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.css']\n})\nexport class LoginRegisterComponent {\n\n  constructor() { }\n\n}\n","<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { UsersModel } from './../../../Models/users-model/users-model.model';\nimport { UserLogin } from './../../../Models/users-model/user-login.model';\nimport { UsersServiceService } from './../../../Services/users-service/users-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: UserLogin = { username: '', password: '' };\n  loginForm!: FormGroup;\n  submitted = false;\n  error: String = null!;\n\n  constructor(private formBuilder: FormBuilder, private router: Router, private userService: UsersServiceService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  login() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.user.username = this.loginForm.value.username;\n    this.user.password = this.loginForm.value.password;\n    // this.error = null;\n    this.userService.login(this.user)\n      .subscribe(data => {\n        // if (resp.status === 200) {\n        //   this.userService.getUserByUsername(this.user).subscribe(\n        //     (resp: UsersModel) => {\n        //       this.userService.setLoggedInUser(resp);\n        //     },\n        //     () => { },\n        //     () => {\n        console.log(data);\n        this.router.navigate(['/home']);\n        //     }\n        //   )\n        // }\n      }, error => {\n        this.error = \"Invalid credentials\";\n        console.log(error);\n      }\n      );\n  }\n}\n","<form id=\"login\" class=\"input-group\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n    <div class=\"form-title\">\n        <h4>Autentificare</h4><hr>\n    </div><br>\n\n    <div class=\"form-group\">\n        <br><input type=\"text\" formControlName=\"username\" name=\"nume_utilizator\" placeholder=\"Nume utilizator\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"password\" formControlName=\"password\" name=\"parola\" placeholder=\"Parola\" class=\"form-control\" required><br>\n    </div>\n    <div class=\"form-group\">\n        <button type=\"button\" class=\"forgottenButton mr-3\" routerLink=\"../forgotten-password\">Ați uitat parola?</button>\n    </div><br><br>\n    <div class=\"button-group\">\n        <button type=\"submit\" class=\"button\">Autentificare</button>\n        <button type=\"button\" routerLink=\"../register\" class=\"button\">Înregistrare</button>\n    </div>\n</form>","<form [formGroup]=\"userSaveForm\" id=\"register\" class=\"input-group\">\n    <div class=\"form-title text-center py-2\">\n        <h4>Înregistrare</h4>\n        <hr>\n    </div><br>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"nume_prenume\" [(ngModel)]=\"firstLastName\" formControlName=\"userFirstLastName\"\n            placeholder=\"Nume și Prenume\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"nr_telefon\" [(ngModel)]=\"phoneNumber\" formControlName=\"userPhoneNumber\"\n            placeholder=\"Număr de telefon\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"email\" name=\"adr_email\" [(ngModel)]=\"email\" formControlName=\"userEmail\" placeholder=\"E-mail\"\n            class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"nume_utilizator\" [(ngModel)]=\"username\" formControlName=\"uUsername\"\n            placeholder=\"Nume utilizator\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"password\" name=\"parola\" [(ngModel)]=\"password\" formControlName=\"userPassword\" placeholder=\"Parola\"\n            class=\"form-control\" required>\n    </div>\n    <div class=\"button-group\">\n        <div class=\"form-group\">\n            <div class=\"alert-msg\">\n                <div style=\"color: red; font-size: 16px\">\n                    {{emptyData}}\n                </div>\n                <div *ngIf=\"successMessage\" class=\"alert alert-success\" role=\"alert\">\n                    <strong>Felicitări!</strong> {{ successMessage }}\n                </div>\n                <div *ngIf=\"failMessage\" class=\"alert alert-danger\" role=\"alert\">\n                    <strong>Uups!</strong> {{ failMessage }}\n                </div>\n            </div>\n        </div>\n        <button type=\"submit\" (click)=\"checkUser()\" class=\"button\">Înregistrare</button>\n        <button type=\"button\" routerLink=\"../login\" class=\"button\">Autentificare</button>\n    </div>\n</form>","import { UsersModel } from './../../../Models/users-model/users-model.model';\nimport { UsersServiceService } from './../../../Services/users-service/users-service.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private userService: UsersServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  user: UsersModel | undefined;\n  userId!: number;\n  firstLastName!: string;\n  phoneNumber!: string;\n  email!: string;\n  username!: string;\n  password!: string;\n  latitude: number = 0;\n  longitude: number = 0;\n  isAdmin: string = \"false\";\n  profilePhoto!: File;\n  successMessage!: string;\n  failMessage!: string;\n  emptyData!: string;\n\n  userSaveForm = new FormGroup({\n    userFirstLastName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    userPhoneNumber: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]),\n    userEmail: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    uUsername: new FormControl('', [Validators.required, Validators.minLength(1)]),\n    userPassword: new FormControl('', [Validators.required, Validators.minLength(4)]),\n  });\n\n  checkUser() {\n    if (!this.firstLastName || !this.phoneNumber || !this.email || !this.username || !this.password) {\n      this.emptyData = \"Toate câmpurile sunt obloigatorii!\"\n      setTimeout(() => {\n        this.emptyData = '';\n      },\n        2000)\n    }\n    else {\n      this.createUser();\n    }\n  }\n\n  createUser() {\n    this.user = {\n      userId: null!,\n      firstLastName: this.firstLastName,\n      phoneNumber: this.phoneNumber,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      latitude: this.latitude,\n      longitude: this.longitude,\n      isAdmin: this.isAdmin,\n      profilePhoto: this.profilePhoto\n    };\n\n    console.log(this.user);\n\n    this.userService.addUser(this.user)\n      .subscribe(\n        (callback: any) => {\n          if (callback) {\n            this.successMessage = \"V-ați înregistrat cu succes!\";\n            console.log(this.successMessage)\n            setTimeout(() => {\n              this.successMessage = '';\n              this.router.navigateByUrl('login-register/login');\n              console.log(callback)\n            },\n              2000)\n          }\n          else {\n            this.failMessage = \"Ceva nu e bine. Încercă din nou!\";\n            setTimeout(() => {\n              this.failMessage = '';\n              this.userSaveForm.reset();\n            },\n              2000)\n          }\n        },\n\n        (err: any) => {\n          this.failMessage = err.error.message;\n          setTimeout(() => {\n            this.failMessage = \"Ceva nu este în regulă!\";\n            this.userSaveForm.reset();\n          },\n            4000)\n        })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<form id=\"reset-pass\" class=\"input-group\" action=\"#\" method=\"post\">\n    <div class=\"form-title\">\n        <h4>Resetează parola</h4><hr>\n    </div><br>\n    \n    <div class=\"form-group\">\n        <input type=\"text\" name=\"new_password\" placeholder=\"Introduceți noua parolă\" class=\"form-control\" required><br>\n    </div>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"cofirm_password\" placeholder=\"Confirmați noua parolă\" class=\"form-control\"\n            required><br>\n    </div>\n    <div class=\"button-group\">\n        <button type=\"submit\" class=\"button\">Resetare parolă</button>\n        <button type=\"button\" routerLink=\"../login\" class=\"button\">Anulare</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-hotels',\n  templateUrl: './my-hotels.component.html',\n  styleUrls: ['./my-hotels.component.css']\n})\nexport class MyHotelsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"title\">\n        <h4>\n            Cazarea mea\n        </h4>\n    </div>\n    <hr>\n    <div class=\"row restaurants\">\n        <div class=\"col-4 image\">\n            <img src=\"../../../assets/Carousel/hotel-ambient.jpg\" alt=\"\">\n        </div>\n        <div class=\"col-5 details\">\n            <h6>Hotel Ambient</h6>\n            Adresa: ...\n        </div>\n        <div class=\"col-3\">\n            Rating\n        </div>\n    </div>\n    <hr>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n\n  isHiddenEditProfileForm : boolean = false;\n  isHiddenEditPasswordForm : boolean = true;\n\n  toggleEditProfile(){\n    this.isHiddenEditProfileForm = false;\n    this.isHiddenEditPasswordForm = true;\n  }\n\n  toggleEditPassword(){\n    this.isHiddenEditProfileForm = true;\n    this.isHiddenEditPasswordForm = false;\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"card-profile\">\n        <div class=\"title\">\n            <h4>Profilul meu</h4>\n        </div>\n        <hr>\n\n        <div class=\"row\">\n            <div class=\"col-md-5 m-auto profile\">\n                <img src=\"../../../assets/profile-photo.jpg\" alt=\"profile photo\" class=\"profile-photo\"><br>\n                <div class=\"user-name\" style=\"text-align: center;\">\n                    <h5>Nume utilizator</h5>\n                </div>\n                <button type=\"button\" class=\"edit-button\">Editează poza de profil</button>\n            </div>\n            \n            <hr>\n            <div class=\"col-md-7 m-auto profile-form\">\n                <div class=\"choose-button\">\n                    <button type=\"button\" (click)=\"toggleEditProfile()\" class=\"button\">Editare date personale</button>\n                    <button type=\"button\" (click)=\"toggleEditPassword()\" class=\"button\">Schimbă parola</button>\n                </div>\n    \n                <form [hidden] = \"isHiddenEditProfileForm\" class=\"form-group\">\n                    <label for=\"last-name\">Nume și Prenume</label>\n                    <input type=\"text\" name=\"last-name\" class=\"form-control\">\n                    <label for=\"adress\">Adresa</label>\n                    <input type=\"text\" name=\"adress\" class=\"form-control\">\n                    <label for=\"city\">Localitate</label>\n                    <input type=\"text\" name=\"city\" class=\"form-control\">\n                    <label for=\"region\">Județ</label>\n                    <input type=\"text\" name=\"region\" class=\"form-control\">\n                    <label for=\"country\">Țara</label>\n                    <input type=\"text\" name=\"country\" class=\"form-control\"><br>\n    \n                    <button type=\"submit\" class=\"button  update-button\">Actualizează datele</button>\n                </form>\n    \n                <form [hidden] = \"isHiddenEditPasswordForm\" class=\"form-group\">\n                    <label for=\"new-password\">Introduceți noua parolă</label>\n                    <input type=\"text\" name=\"new-password\" class=\"form-control\">\n                    <label for=\"confirm-password\">Confirmați parola</label>\n                    <input type=\"text\" name=\"confirm-password\" class=\"form-control\"><br>\n    \n                    <button type=\"submit\" class=\"button\">Resetează parola</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-restaurants',\n  templateUrl: './my-restaurants.component.html',\n  styleUrls: ['./my-restaurants.component.css']\n})\nexport class MyRestaurantsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"title\">\n        <h4>\n            Restaurentele mele\n        </h4>\n    </div>\n    <hr>\n    <div class=\"row restaurants\">\n        <div class=\"col-4 image\">\n            <img src=\"../../../assets/Restaurante/greek-restaurant.jpg\" alt=\"\">\n        </div>\n        <div class=\"col-5 details\">\n            <h6>Restaurant Athanasios</h6>\n            Adresa: ...\n        </div>\n        <div class=\"col-3\">\n            Rating\n        </div>\n    </div>\n    <hr>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  opened: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-sidenav-container>\n    <mat-sidenav #sidenav mode=\"side\" [(opened)]=\"opened\">\n        <div class=\"sidenav-menu\">\n            <div style=\"text-align: center;\">\n                <img src=\"../../../assets/profile-photo.jpg\" class=\"profile-image\">\n                <h4>Nume utilizator</h4>\n            </div>\n            <ul style=\"list-style-type:none\">\n                <li><a routerLink=\"home\" (click)=\"sidenav.toggle()\"><i class=\"fas fa-home\"></i>Acasă</a></li>\n                <li><a routerLink=\"my-profile\" (click)=\"sidenav.toggle()\"><i class=\"fas fa-address-card\"></i>Profilul meu</a></li>\n                <li><a routerLink=\"my-restaurants\" (click)=\"sidenav.toggle()\"><i class=\"fas fa-utensils\"></i>Restaurantele mele</a></li>\n                <li><a routerLink=\"my-hotels\" (click)=\"sidenav.toggle()\"><i class=\"fas fa-hotel\"></i>Cazarea mea</a></li>\n            </ul>  \n            <div>\n                <a class=\"logout_btn\" mat-raised-button routerLink=\"\\\">Deconectare</a>\n            </div> \n        </div>\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <mat-toolbar class=\"mat-elevation-z8\">\n            <button mat-icon-button aria-label=\"menu icon\" (click)=\"sidenav.toggle()\">\n                <mat-icon>menu</mat-icon>\n            </button>\n            <span>Brașov</span>\n\n            <div class=\"spacer\"></div>\n   \n            <a mat-button routerLink=\"home\">Acasă</a>\n            <a mat-button routerLink=\"hotels\">Hoteluri</a>\n            <a mat-button routerLink=\"restaurants\">Restaurante</a>\n            <a class=\"login_btn\" mat-raised-button routerLink=\"login-register\">Autentificare/Înregistrare</a>\n        </mat-toolbar>\n        <div class=\"page-content\">\n            <router-outlet></router-outlet>\n        </div>\n   \n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-restaurants',\n  templateUrl: './restaurants.component.html',\n  styleUrls: ['./restaurants.component.css']\n})\nexport class RestaurantsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"title\">\n        <h4>Restaurante în Brașov</h4>\n    </div>\n    <hr>\n    <div class=\"row restaurants\">\n        <div class=\"col-4 image\">\n            <img src=\"../../../assets/Restaurante/greek-restaurant.jpg\" alt=\"\">\n        </div>\n        <div class=\"col-5 details\">\n            <h6>Restaurant Athanasios</h6>\n            Adresa: ...\n        </div>\n        <div class=\"col-3\">\n            Rating\n        </div>\n    </div>\n    <hr>\n</div>\n","export class HotelModel {\n    hotelId!: number;\n    name!: string;\n    address!: string;\n    price!: number;\n    rooms!: number;\n    adults!: number;\n    children!: number;\n    latitude!: number;\n    longitude!: number;\n    photo!: File;\n}\n","export class RestaurantModel {\n    restaurantId!: number;\n    name!: string;\n    address!: string;\n    schedule!: string;\n    latitude!: number;\n    longitude!: number;\n    photo!: File;\n}\n","export class TouristicObjectiveModel {\n    objectiveId!: number;\n    name!: string;\n    address!: string;\n    description!: string;\n    schedule!: string;\n    latitude!: number;\n    longitude!: number;\n    photo!: File;\n}\n","export class UserLogin {\n    username!: string;\n    password!: string;\n}\n","export class UsersModel {\n    userId!: number;\n    firstLastName!: string;\n    phoneNumber!: string;\n    email!: string;\n    username!: string;\n    password!: string;\n    latitude!: number;\n    longitude!: number;\n    isAdmin!: string;\n    profilePhoto!: File;\n}\n","import { HotelModel } from './../../Models/hotel-model/hotel-model.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HotelServiceService {\n\n  constructor(private http: HttpClient) { }\n  \n  readonly APIUrl = \"http://localhost:5000/api/Hotel\";\n  \n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  getHotelsList(): Observable<HotelModel[]> {\n    return this.http.get<HotelModel[]>(this.APIUrl);\n  }\n\n  getHotel(id: number): Observable<HotelModel>{\n    return this.http.get<HotelModel>(`${this.APIUrl}/${id}`);\n  }\n\n  addHotel(hotel: HotelModel): Observable<HotelModel> {\n    const newHotel = new HotelModel();\n    newHotel.name = hotel.name;\n    newHotel.address = hotel.address;\n    newHotel.price = hotel.price;\n    newHotel.rooms = hotel.rooms;\n    newHotel.adults = hotel.adults;\n    newHotel.children = hotel.children;\n    newHotel.latitude = hotel.latitude;\n    newHotel.longitude = hotel.longitude;\n    // formData.photo = hotel.photo;\n    return this.http.post<HotelModel>(this.APIUrl, newHotel);\n  }\n\n  updateHotel(id: number, hotel: HotelModel): Observable<HotelModel> {\n    return this.http.put<HotelModel>(`${this.APIUrl}/${id}`, hotel);\n  }\n\n  deleteHotel(id: number): Observable<HotelModel> {\n    return this.http.delete<HotelModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val: any): Observable<HotelModel> {\n    return this.http.post<HotelModel>(this.APIUrl + '/SaveFile', val);\n  }\n}\n","import { ReservationModel } from './../../Models/reservation-model/reservation-model.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationServiceService {\n\n  readonly APIUrl = \"http://localhost:5000/api/Reservation\";\n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  constructor(private http:HttpClient) { }\n\n  getReservationsList(): Observable<ReservationModel[]>{\n    return this.http.get<ReservationModel[]>(this.APIUrl);\n  }\n\n  addReservation(reservation: ReservationModel): Observable<ReservationModel>{\n    return this.http.post<ReservationModel>(this.APIUrl, reservation);\n  }\n\n  updateReservation(id: number, reservation: ReservationModel): Observable<ReservationModel>{\n    return this.http.put<ReservationModel>(`${this.APIUrl}/${id}`, reservation);\n  }\n\n  deleteReservation(id: number): Observable<ReservationModel>{\n    return this.http.delete<ReservationModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val:any): Observable<ReservationModel>{\n    return this.http.post<ReservationModel>(this.APIUrl+'/SaveFile', val);\n  }\n}\n","import { RestaurantModel } from './../../Models/restaurant-model/restaurant-model.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  readonly APIUrl = \"http://localhost:5000/api/Restaurant\";\n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  getRestaurantsList(): Observable<RestaurantModel[]>{\n    return this.http.get<RestaurantModel[]>(this.APIUrl);\n  }\n\n  getRestaurant(id: number): Observable<RestaurantModel>{\n    return this.http.get<RestaurantModel>(`${this.APIUrl}/${id}`);\n  }\n\n  addRestaurant(restaurant: RestaurantModel): Observable<RestaurantModel>{\n    const newRestaurant = new RestaurantModel();\n    newRestaurant.name = restaurant.name;\n    newRestaurant.address = restaurant.address;\n    newRestaurant.schedule = restaurant.schedule;\n    newRestaurant.latitude = restaurant.latitude;\n    newRestaurant.longitude = restaurant.longitude;\n    newRestaurant.photo = restaurant.photo;\n    return this.http.post<RestaurantModel>(this.APIUrl, newRestaurant);\n  }\n\n  updateRestaurant(id: number, restaurant: RestaurantModel): Observable<RestaurantModel>{\n    return this.http.put<RestaurantModel>(`${this.APIUrl}/${id}`, restaurant);\n  }\n\n  deleteRestaurant(id: number): Observable<RestaurantModel>{\n    return this.http.delete<RestaurantModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val:any): Observable<RestaurantModel>{\n    return this.http.post<RestaurantModel>(this.APIUrl+'/SaveFile', val);\n  }\n}\n","import { TouristicObjectiveModel } from './../../Models/touristic-objective-model/touristic-objective-model.model';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TouristicObjectiveServiceService {\n\n  readonly APIUrl = \"http://localhost:5000/api/TouristicObjective\";\n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  constructor(private http:HttpClient) { }\n\n  getTouristicObjectivesList(): Observable<TouristicObjectiveModel[]>{\n    return this.http.get<TouristicObjectiveModel[]>(this.APIUrl);\n  }\n\n  getTouristicObjective(id: number): Observable<TouristicObjectiveModel>{\n    return this.http.get<TouristicObjectiveModel>(`${this.APIUrl}/${id}`);\n  }\n\n  addTouristicObjective(objective: TouristicObjectiveModel): Observable<TouristicObjectiveModel>{\n    const newObjective = new TouristicObjectiveModel();\n    newObjective.name = objective.name;\n    newObjective.address = objective.address;\n    newObjective.description = objective.description;\n    newObjective.schedule = objective.schedule;\n    newObjective.latitude = objective.latitude;\n    newObjective.longitude = objective.longitude;\n    newObjective.photo = objective.photo;\n    return this.http.post<TouristicObjectiveModel>(this.APIUrl, newObjective);\n  }\n\n  updateTouristicObjective(id: number, objective: TouristicObjectiveModel): Observable<TouristicObjectiveModel>{\n    return this.http.put<TouristicObjectiveModel>(`${this.APIUrl}/${id}`, objective);\n  }\n\n  deleteTouristicObjective(id: number): Observable<TouristicObjectiveModel>{\n    return this.http.delete<TouristicObjectiveModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val:any): Observable<TouristicObjectiveModel>{\n    return this.http.post<TouristicObjectiveModel>(this.APIUrl+'/touristicobjective/SaveFile', val);\n  }\n}\n","import { UserLogin } from './../../Models/users-model/user-login.model';\nimport { UsersModel } from './../../Models/users-model/users-model.model';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  readonly APIUrl = \"http://localhost:5000/api/Users\";\n  readonly PhotoUrl = \"http://localhost:5000/Photos\";\n\n  getUsersList(): Observable<UsersModel[]>{\n    return this.http.get<UsersModel[]>(this.APIUrl);\n  }\n\n  getUser(id: number): Observable<UsersModel>{\n    return this.http.get<UsersModel>(`${this.APIUrl}/${id}`);\n  }\n\n  addUser(user: UsersModel): Observable<UsersModel>{\n    const newUser = new UsersModel();\n    newUser.firstLastName = user.firstLastName;\n    newUser.phoneNumber = user.phoneNumber;\n    newUser.email = user.email;\n    newUser.username = user.username;\n    newUser.password = user.password;\n    newUser.latitude = user.latitude;\n    newUser.longitude = user.longitude;\n    newUser.isAdmin = user.isAdmin;\n    // newUser.profilePhoto = user.profilePhoto;\n    return this.http.post<UsersModel>(this.APIUrl, newUser);\n  }\n\n  login(user: UserLogin): Observable<UsersModel>{\n    const userForm = new UserLogin();\n    userForm.username = user.username;\n    userForm.password = user.password;\n    return this.http.post<UsersModel>(`${this.APIUrl}`+ '/login', userForm);\n  }\n\n  updateUser(id: number, user: UsersModel): Observable<UsersModel>{\n    return this.http.put<UsersModel>(`${this.APIUrl}/${id}`, user);\n  }\n\n  deleteUser(id: number): Observable<UsersModel>{\n    return this.http.delete<UsersModel>(`${this.APIUrl}/${id}`);\n  }\n\n  uploadPhoto(val:any): Observable<UsersModel>{\n    return this.http.post<UsersModel>(this.APIUrl+'/SaveFile', val);\n  }\n\n  // getPublicContent(): Observable<any> {\n  //   return this.http.get(this.APIUrl + '/all', { responseType: 'text' });\n  // }\n\n  // getUserBoard(): Observable<any> {\n  //   return this.http.get(this.APIUrl + '/user', { responseType: 'text' });\n  // }\n\n  // getAdminBoard(): Observable<any> {\n  //   return this.http.get(this.APIUrl + '/admin', { responseType: 'text' });\n  // }\n}\n","import { ResetPasswordComponent } from './Components/login-register/reset-password/reset-password.component';\nimport { ForgottenPasswordComponent } from './Components/login-register/forgotten-password/forgotten-password.component';\nimport { RegisterComponent } from './Components/login-register/register/register.component';\nimport { LoginComponent } from './Components/login-register/login/login.component';\nimport { AdminReservationsComponent } from './Components/admin-page/admin-reservations/admin-reservations.component';\nimport { ViewObjectivesComponent } from './Components/admin-page/admin-touristic-objective/view-objectives/view-objectives.component';\nimport { EditObjectiveComponent } from './Components/admin-page/admin-touristic-objective/edit-objective/edit-objective.component';\nimport { AddObjectiveComponent } from './Components/admin-page/admin-touristic-objective/add-objective/add-objective.component';\nimport { ViewRestaurantsComponent } from './Components/admin-page/admin-restaurants/view-restaurants/view-restaurants.component';\nimport { EditRestaurantComponent } from './Components/admin-page/admin-restaurants/edit-restaurant/edit-restaurant.component';\nimport { AddRestaurantComponent } from './Components/admin-page/admin-restaurants/add-restaurant/add-restaurant.component';\nimport { AddHotelComponent } from './Components/admin-page/admin-hotels/add-hotel/add-hotel.component';\nimport { AdminPageComponent } from './Components/admin-page/admin-page.component';\nimport { ItemsCarouselComponent } from './Components/home/items-carousel/items-carousel.component';\nimport { ToDoComponent } from './Components/home/to-do/to-do.component';\nimport { EatComponent } from './Components/home/eat/eat.component';\nimport { StayComponent } from './Components/home/stay/stay.component';\nimport { MapComponent } from './Components/home/map/map.component';\nimport { HomeComponent } from './Components/home/home.component';\nimport { CarouselComponent } from './Components/hotels/carousel/carousel.component';\nimport { LoginRegisterComponent } from './Components/login-register/login-register.component';\nimport { RestaurantsComponent } from './Components/restaurants/restaurants.component';\nimport { HotelsComponent } from './Components/hotels/hotels.component';\nimport { MyProfileComponent } from './Components/my-profile/my-profile.component';\nimport { MyRestaurantsComponent } from './Components/my-restaurants/my-restaurants.component';\nimport { MyHotelsComponent } from './Components/my-hotels/my-hotels.component';\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewHotelsComponent } from './Components/admin-page/admin-hotels/view-hotels/view-hotels.component';\nimport { EditHotelComponent } from './Components/admin-page/admin-hotels/edit-hotel/edit-hotel.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'my-profile',\n    component: MyProfileComponent\n  },\n  {\n    path: 'hotels',\n    component: HotelsComponent\n  },\n  {\n    path: 'restaurants',\n    component: RestaurantsComponent\n  },\n  {\n    path: 'login-register',\n    component: LoginRegisterComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'register',\n        component: RegisterComponent\n      },\n      {\n        path: 'forgotten-password',\n        component: ForgottenPasswordComponent\n      },\n      {\n        path: 'reset-password',\n        component: ResetPasswordComponent\n      }\n    ]\n  },\n  {\n    path: 'my-restaurants',\n    component: MyRestaurantsComponent\n  },\n  {\n    path: 'my-hotels',\n    component: MyHotelsComponent\n  },\n  {\n    path: 'carousel',\n    component: CarouselComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'map',\n    component: MapComponent\n  },\n  {\n    path: 'to-do',\n    component: ToDoComponent\n  },\n  {\n    path: 'stay',\n    component: StayComponent\n  },\n  {\n    path: 'eat',\n    component: EatComponent\n  },\n  {\n    path: 'items-carousel',\n    component: ItemsCarouselComponent\n  },\n  {\n    path: 'admin-page',\n    component: AdminPageComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'admin-reservation',\n        pathMatch: 'full'\n      },\n      {\n        path: 'admin-reservation',\n        component: AdminReservationsComponent\n      },\n      {\n        path: 'view-hotels',\n        component: ViewHotelsComponent\n      },\n      {\n        path: 'add-hotel',\n        component: AddHotelComponent\n      },\n      {\n        path: 'edit-hotel/:id',\n        component: EditHotelComponent\n      },\n      {\n        path: 'add-restaurant',\n        component: AddRestaurantComponent\n      },\n      {\n        path: 'edit-restaurant/:id',\n        component: EditRestaurantComponent\n      },\n      {\n        path: 'view-restaurants',\n        component: ViewRestaurantsComponent\n      },\n      {\n        path: 'add-objective',\n        component: AddObjectiveComponent\n      },\n      {\n        path: 'edit-objective/:id',\n        component: EditObjectiveComponent\n      },\n      {\n        path: 'view-objectives',\n        component: ViewObjectivesComponent\n      }\n    ]\n  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularApp';\n}\n","<main class=\"content\">\n    <app-navbar></app-navbar>\n    <router-outlet></router-outlet>\n</main>\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { HttpClientModule, HttpClientJsonpModule } from '@angular/common/http';\r\n\r\n// import { authInterceptorProviders } from './_helpers/auth.interceptor';\r\n\r\nimport { CarouselModule, WavesModule, MDBBootstrapModulesPro } from 'ng-uikit-pro-standard'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginRegisterComponent } from './Components/login-register/login-register.component';\r\nimport { MyProfileComponent } from './Components/my-profile/my-profile.component';\r\nimport { RestaurantsComponent } from './Components/restaurants/restaurants.component';\r\nimport { HotelsComponent } from './Components/hotels/hotels.component';\r\nimport { NavbarComponent } from './Components/navbar/navbar.component';\r\nimport { MyRestaurantsComponent } from './Components/my-restaurants/my-restaurants.component';\r\nimport { MyHotelsComponent } from './Components/my-hotels/my-hotels.component';\r\nimport { CarouselComponent } from './Components/hotels/carousel/carousel.component';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { IgxButtonModule, IgxToggleModule } from \"igniteui-angular\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HomeComponent } from './Components/home/home.component';\r\nimport { GalleryComponent } from './Components/home/gallery/gallery.component';\r\nimport { MapComponent } from './Components/home/map/map.component';\r\nimport { ToDoComponent } from './Components/home/to-do/to-do.component';\r\nimport { StayComponent } from './Components/home/stay/stay.component';\r\nimport { EatComponent } from './Components/home/eat/eat.component';\r\nimport { ItemsCarouselComponent } from './Components/home/items-carousel/items-carousel.component';\r\nimport { AdminPageComponent } from './Components/admin-page/admin-page.component';\r\nimport { HotelServiceService } from './Services/hotel-service/hotel-service.service';\r\nimport { ReservationServiceService } from './Services/reservation-service/reservation-service.service';\r\nimport { RestaurantServiceService } from './Services/restaurant-service/restaurant-service.service';\r\nimport { TouristicObjectiveServiceService } from './Services/touristic-objective-service/touristic-objective-service.service';\r\nimport { UsersServiceService } from './Services/users-service/users-service.service';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AddHotelComponent } from './Components/admin-page/admin-hotels/add-hotel/add-hotel.component';\r\nimport { EditHotelComponent } from './Components/admin-page/admin-hotels/edit-hotel/edit-hotel.component';\r\nimport { ViewHotelsComponent } from './Components/admin-page/admin-hotels/view-hotels/view-hotels.component';\r\nimport { AddRestaurantComponent } from './Components/admin-page/admin-restaurants/add-restaurant/add-restaurant.component';\r\nimport { ViewRestaurantsComponent } from './Components/admin-page/admin-restaurants/view-restaurants/view-restaurants.component';\r\nimport { EditRestaurantComponent } from './Components/admin-page/admin-restaurants/edit-restaurant/edit-restaurant.component';\r\nimport { AddObjectiveComponent } from './Components/admin-page/admin-touristic-objective/add-objective/add-objective.component';\r\nimport { EditObjectiveComponent } from './Components/admin-page/admin-touristic-objective/edit-objective/edit-objective.component';\r\nimport { ViewObjectivesComponent } from './Components/admin-page/admin-touristic-objective/view-objectives/view-objectives.component';\r\nimport { AdminReservationsComponent } from './Components/admin-page/admin-reservations/admin-reservations.component';\r\nimport { LoginComponent } from './Components/login-register/login/login.component';\r\nimport { RegisterComponent } from './Components/login-register/register/register.component';\r\nimport { ForgottenPasswordComponent } from './Components/login-register/forgotten-password/forgotten-password.component';\r\nimport { ResetPasswordComponent } from './Components/login-register/reset-password/reset-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginRegisterComponent,\r\n    MyProfileComponent,\r\n    RestaurantsComponent,\r\n    HotelsComponent,\r\n    NavbarComponent,\r\n    MyRestaurantsComponent,\r\n    MyHotelsComponent,\r\n    CarouselComponent,\r\n    HomeComponent,\r\n    GalleryComponent,\r\n    MapComponent,\r\n    ToDoComponent,\r\n    StayComponent,\r\n    EatComponent,\r\n    ItemsCarouselComponent,\r\n    AdminPageComponent,\r\n    AddHotelComponent,\r\n    EditHotelComponent,\r\n    ViewHotelsComponent,\r\n    AddRestaurantComponent,\r\n    ViewRestaurantsComponent,\r\n    EditRestaurantComponent,\r\n    AddObjectiveComponent,\r\n    EditObjectiveComponent,\r\n    ViewObjectivesComponent,\r\n    AdminReservationsComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ForgottenPasswordComponent,\r\n    ResetPasswordComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    BrowserAnimationsModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSlideToggleModule,\r\n    IgxButtonModule,\r\n    IgxToggleModule,\r\n    NgbModule,\r\n    GoogleMapsModule,\r\n    HttpClientModule,\r\n    HttpClientJsonpModule,\r\n    CarouselModule,\r\n    WavesModule,\r\n    ToastrModule.forRoot(),\r\n    MDBBootstrapModulesPro.forRoot()\r\n  ],\r\n  providers: [\r\n    HotelServiceService,\r\n    ReservationServiceService,\r\n    RestaurantServiceService,\r\n    TouristicObjectiveServiceService,\r\n    UsersServiceService,\r\n    // authInterceptorProviders\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}